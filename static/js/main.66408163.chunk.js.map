{"version":3,"sources":["components/InputFriend.tsx","components/SearchFriend.tsx","components/GetHoliday.tsx","components/NowTime.tsx","App.tsx","index.tsx"],"names":["InputFriend","friendList","useState","idx","name","age","nickname","filteredFriend","setFilteredFriend","arraySearch","a","document","getElementById","filterFriend","filter","element","value","length","type","id","onClick","SearchFriend","setFriendList","getFriendList","fetch","response","json","myFriendList","useEffect","memo","GetHoliday","dateKind","dateName","isHoliday","locdate","seq","holidayList","setHolidayList","itemList","map","holiday","index","datenumber","toString","replace","console","log","e","requestOption","headers","body","year","axios","post","data","item","fetchHoliday","NowTime","hour","minute","seconds","nowTime","setNowTime","setInterval","date","Date","getHours","getMinutes","getSeconds","App","to","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.66408163.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Friend } from '../types/types';\n\ninterface Props {\n  friendList:Friend[]\n}\n\nconst InputFriend = ({ friendList }:Props) => {\n  const [filteredFriend,setFilteredFriend] = useState<Friend>({\n      idx: 0,\n      name: '',\n      age: 0,\n      nickname: ''\n    }\n  );\n\n  const arraySearch = async () => {\n    const name = await (document.getElementById('name') as HTMLInputElement);\n    const filterFriend =  friendList.filter((element:Friend) => element.name === name.value);\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: '찾을 수 없습니다.',\n        age: -1,\n        nickname: '찾을 수 없습니다.'\n      });\n    }\n  }\n  \n  return (\n    <div>\n      <input type=\"text\" id='name'/>\n      <button type=\"submit\" onClick={arraySearch}>찾기!</button>\n      {filteredFriend.idx === 0 ? <h1>이름을 입력해주세요.</h1>\n      : <div>\n          이름 : {filteredFriend.name}\n          나이 : {filteredFriend.age}\n          별명 : {filteredFriend.nickname}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default InputFriend;","import React,{ useState,memo,useEffect } from 'react';\nimport InputFriend from './InputFriend';\nimport { Friend } from '../types/types';\n\nconst SearchFriend = () => {\n  \n  const [friendList,setFriendList] = useState<Friend[]>([]);\n  \n  const getFriendList = async() : Promise<any> => {\n    const response = await fetch(`https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`);\n    const myFriendList = await response.json()\n    \n    setFriendList(myFriendList);\n  }\n\n  useEffect(() => {\n    getFriendList();\n  },[])\n  \n  return (\n    <InputFriend friendList={friendList} />\n  );\n}\n\nexport default memo(SearchFriend);","import React, { useState,useEffect,memo } from 'react';\nimport axios from 'axios';\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\nconst formatMoment = (datenumber: number): any => {\n  const datestring = datenumber.toString();\n  return datestring.replace(/([0-9]{4})([0-9]{2})([0-9]{2})/,'$1-$2-$3');\n}\n\nconst GetHoliday = () => {\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([\n    {\n      dateKind: '',\n      dateName: '',\n      isHoliday: '',\n      locdate: 0,\n      seq: 0,\n    }\n  ]);\n\n  const runFetch = (e:React.MouseEvent<HTMLButtonElement>) => {\n\n    const inputYear = (document.getElementById('year') as HTMLInputElement ).value;\n\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        year: inputYear\n      }\n    };\n\n    const fetchHoliday = async ():Promise<void> => {\n      const response = await axios.post('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas',requestOption);\n      const data = await response.data.holidayList.item;\n      if (!data) {\n        setHolidayList([{\n          dateKind:'올바른 연도를 입력해주세요',\n          dateName: '올바른 연도를 입력해주세요',\n          isHoliday: '',\n          locdate: 0,\n          seq: 0,\n        }]);\n      } else {\n        setHolidayList(data);\n      }\n    }\n\n    fetchHoliday()\n\n  }\n  const itemList = holidayList.map((holiday,index) => \n    <li key={index}>\n      {holiday.dateName}({formatMoment(holiday.locdate)})\n    </li>\n  );\n  useEffect(() => {console.log('렌더링!')},[]);\n\n  return (\n    <div>\n      <input id='year' type=\"number\"/>\n      <button onClick={runFetch}>확인</button>\n      <ul>\n        {itemList}\n      </ul>\n    </div>\n  );\n}\nexport default memo(GetHoliday);","import { useState,memo } from 'react';\n\ntype time = {\n  hour: number,\n  minute: number,\n  seconds: number\n}\n\nconst NowTime = () => {\n  const [nowTime,setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds()\n    });\n  }\n  setInterval(setTime,1000);\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>{nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.</p>\n      <p>하지만 도연이의 퇴근 시간은 22시 0분 0초 입니다.</p>\n    </div>\n  );\n}\nexport default memo(NowTime);","import React from 'react';\nimport { Route, BrowserRouter, Link, Switch } from 'react-router-dom'\n// import NowTime from './components/NowTime';\nimport SearchFriend from './components/SearchFriend';\nimport GetHoliday from './components/GetHoliday';\nimport NowTime from './components/NowTime';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      {/* <NowTime /> */}\n        <ul>\n          <li>\n            <Link to='/nowtime'>현재시간을 확인하세요</Link>\n          </li>\n          <li>\n            <Link to='/profile'>친구들의 정보를 확인하세요</Link>\n          </li>\n          <li>\n            <Link to='/showholiday'>이번년도 휴일을 알아보세요</Link>\n          </li>\n        </ul>\n        <hr/>\n      <Switch>\n        {/* <Route path='/' exact={true} component={NowTime}/> */}\n        <Route path='/nowtime' exact component={NowTime}/>\n        <Route path='/profile' exact component={SearchFriend}/>\n        <Route path='/showholiday' exact component={GetHoliday} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}