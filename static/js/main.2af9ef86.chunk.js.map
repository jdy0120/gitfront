{"version":3,"sources":["components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","components/GetHoliday.tsx","components/NowTime.tsx","App.tsx","index.tsx"],"names":["ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","a","friendInfo","name","document","getElementById","value","toString","age","parseInt","nickname","requestOption","headers","body","axios","post","response","changeFalse","useEffect","onClick","type","id","defaultValue","SearchFriend","useState","friendList","setFriendList","idx","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","element","length","memo","GetHoliday","dateKind","dateName","isHoliday","locdate","seq","holidayList","setHolidayList","itemList","map","holiday","index","datenumber","replace","console","log","e","year","data","item","fetchHoliday","NowTime","hour","minute","seconds","nowTime","setNowTime","setInterval","date","Date","getHours","getMinutes","getSeconds","App","to","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.2af9ef86.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Friend } from '../../types/types';\nimport axios from 'axios';\n\ninterface Props {\n  friend: Friend\n  canChange: boolean\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }:Props) => {\n\n  const changeTrue = () => {\n    setCanChange(true)\n  }\n\n  const insertFriendDatabase = async () => {\n\n    const friendInfo:Friend = {\n      name: (document.getElementById('name') as HTMLInputElement).value.toString(),\n      age: parseInt((document.getElementById('age') as HTMLInputElement).value.toString()),\n      nickname: (document.getElementById('nickname') as HTMLInputElement).value.toString()\n    }\n\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        friendInfo\n      }\n    };\n    \n    const response = await axios.post('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend',requestOption);\n    return response\n  }\n\n  const changeFalse = async () => {\n    await insertFriendDatabase()\n    setCanChange(false)\n  }\n  \n  useEffect(() => {\n  },[]);\n\n  return (\n    <div>\n      {canChange === false ?\n      <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      :\n      <>\n        <p>이름 : </p><input type=\"text\" id='name' defaultValue={friend.name} />\n        <p>나이 : </p><input type=\"number\" id='age' />\n        <p>별명 : </p><input type=\"text\" id='nickname' defaultValue={friend.nickname} />\n        <button onClick={changeFalse}>확인!</button>\n      </>\n      }\n    </div>\n  );\n}\n\nexport default ChangeOrAddFriend;","import React,{ useState,memo,useEffect } from 'react';\nimport { Friend } from '../../types/types';\nimport ChangeOrAddFriend from './ChangeOrAddFriend';\n\nconst SearchFriend = () => {\n  \n  const [friendList,setFriendList] = useState<Friend[]>([]);\n  const [canChange,setCanChange] = useState(false);\n  const [filteredFriend,setFilteredFriend] = useState<Friend>({\n      idx: 0,\n      name: '',\n      age: 0,\n      nickname: ''\n    }\n  );\n  \n  const getFriendList = async() : Promise<any> => {\n    const response = await fetch(`https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`);\n    const myFriendList = await response.json()\n    \n    setFriendList(myFriendList);\n  }\n\n  const arraySearch = async () => {\n    const name = document.getElementById('name') as HTMLInputElement;\n    const filterFriend =  friendList.filter((element:Friend) => element.name === name.value);\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: '찾을 수 없습니다.'\n      });\n    }\n  }\n\n  useEffect(() => {\n    getFriendList();\n  },[canChange])\n  \n  return (\n    <>\n      <div>\n        <input type=\"text\" id='name' defaultValue='조도연'/>\n        <button type=\"submit\" onClick={arraySearch}>찾기!</button>\n        {filteredFriend.idx === 0 ? <h1>이름을 입력해주세요.</h1>\n        : <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend friend={filteredFriend} canChange={canChange} setCanChange={setCanChange} />\n          </div>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default memo(SearchFriend);","import React, { useState,useEffect,memo } from 'react';\nimport axios from 'axios';\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\nconst formatMoment = (datenumber: number): any => {\n  const datestring = datenumber.toString();\n  return datestring.replace(/([0-9]{4})([0-9]{2})([0-9]{2})/,'$1-$2-$3');\n}\n\nconst GetHoliday = () => {\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([\n    {\n      dateKind: '',\n      dateName: '',\n      isHoliday: '',\n      locdate: 0,\n      seq: 0,\n    }\n  ]);\n\n  const runFetch = (e:React.MouseEvent<HTMLButtonElement>) => {\n\n    const inputYear = (document.getElementById('year') as HTMLInputElement ).value;\n\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        year: inputYear\n      }\n    };\n\n    const fetchHoliday = async ():Promise<void> => {\n      const response = await axios.post('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas',requestOption);\n      const data = await response.data.holidayList.item;\n      if (!data) {\n        setHolidayList([{\n          dateKind:'올바른 연도를 입력해주세요',\n          dateName: '올바른 연도를 입력해주세요',\n          isHoliday: '',\n          locdate: 0,\n          seq: 0,\n        }]);\n      } else {\n        setHolidayList(data);\n      }\n    }\n\n    fetchHoliday()\n\n  }\n  const itemList = holidayList.map((holiday,index) => \n    <li key={index}>\n      {holiday.dateName}({formatMoment(holiday.locdate)})\n    </li>\n  );\n  useEffect(() => {console.log('렌더링!')},[]);\n\n  return (\n    <div>\n      <input id='year' type=\"number\"/>\n      <button onClick={runFetch}>확인</button>\n      <ul>\n        {itemList}\n      </ul>\n    </div>\n  );\n}\nexport default memo(GetHoliday);","import { useState,memo } from 'react';\n\ntype time = {\n  hour: number,\n  minute: number,\n  seconds: number\n}\n\nconst NowTime = () => {\n  const [nowTime,setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds()\n    });\n  }\n  setInterval(setTime,1000);\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>{nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.</p>\n      <p>하지만 도연이의 퇴근 시간은 22시 0분 0초 입니다.</p>\n    </div>\n  );\n}\nexport default memo(NowTime);","import React from 'react';\nimport { Route, BrowserRouter, Link, Switch } from 'react-router-dom'\n// import NowTime from './components/NowTime';\nimport SearchFriend from './components/Friends/SearchFriend';\nimport GetHoliday from './components/GetHoliday';\nimport NowTime from './components/NowTime';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      {/* <NowTime /> */}\n        <ul>\n          <li>\n            <Link to='/nowtime'>현재시간을 확인하세요</Link>\n          </li>\n          <li>\n            <Link to='/profile'>친구들의 정보를 확인하세요</Link>\n          </li>\n          <li>\n            <Link to='/showholiday'>이번년도 휴일을 알아보세요</Link>\n          </li>\n        </ul>\n        <hr/>\n      <Switch>\n        {/* <Route path='/' exact={true} component={NowTime}/> */}\n        <Route path='/nowtime' exact component={NowTime}/>\n        <Route path='/profile' exact component={SearchFriend}/>\n        <Route path='/showholiday' exact component={GetHoliday} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}