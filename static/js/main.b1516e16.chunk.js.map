{"version":3,"sources":["_config/jwt-config.ts","components/Calendar/EventCRUD.tsx","components/Calendar/Calendar.tsx","components/GetHoliday.tsx","components/GetWeather.tsx","components/Login/Register.tsx","components/Login/Login.tsx","components/NowTime.tsx","components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","App.tsx","index.tsx"],"names":["jwtObj","moment","tz","format","formatMoment","datestring","newDate","replace","Date","getDay","EventCRUD","clickedEvent","clickedDate","setEventModal","useState","title","setTitle","content","setContent","useCookies","cookie","insertEvent","a","requestOption","headers","loginToken","body","division","name","date","console","log","axios","post","response","JSON","stringify","window","location","reload","deleteEvent","jwtInfo","jwt","verify","parse","email","idx","alert","DialogContent","style","textAlign","DialogTitle","id","DialogContentText","Button","variant","color","onClick","TextField","label","onChange","e","target","value","multiline","Transition","React","forwardRef","props","ref","Slide","direction","Calendar","history","events","setEvents","eventModal","setClickedEvent","setClickedDate","getEvents","data","map","element","push","useEffect","plugins","dayGridPlugin","interactionPlugin","initialView","dateClick","undefined","dateStr","eventClick","def","event","_def","instance","_instance","range","start","toString","extendedProps","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","datenumber","GetHoliday","loading","setLoading","year","setYear","holidayList","setHolidayList","runFetch","fetchHoliday","item","size","type","placeholder","listStyle","holiday","index","dateName","locdate","GetWeather","setLocation","weatherData","setWeatherData","getWeatherInfo","country_name","Math","floor","temp","feels_like","Title","styled","h1","getModalStyle","top","left","transform","useStyles","makeStyles","theme","createStyles","paper","alignItems","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Register","setOpenLoginModal","setName","setEmail","pw","setPw","setCookie","modalStyle","classes","getRegister","preventDefault","withCredentials","path","maxAge","className","action","onSubmit","required","Login","register","setRegister","header","getToken","NowTime","hour","minute","seconds","nowTime","setNowTime","setTime","getHours","getMinutes","getSeconds","setInterval","memo","ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","friendInfo","document","getElementById","age","parseInt","nickname","put","changeFalse","defaultValue","SearchFriend","friendList","setFriendList","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","length","Bar","children","linkStyle","textDecoration","App","removeCookie","openLoginModal","openMenu","setOpenMenu","menuClose","aria-controls","aria-haspopup","currentTarget","Modal","Menu","anchorEl","Boolean","MenuItem","to","exact","component","ReactDOM","render","CookiesProvider"],"mappings":"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","file":"static/js/main.b1516e16.chunk.js","sourcesContent":["export const jwtObj = {\n  secret: 'mango',\n}","import { Dispatch, SetStateAction, useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { EventInfo, JwtInfo } from \"../../types/types\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\nimport moment from \"moment-timezone\";\nimport { useCookies } from \"react-cookie\";\nimport { jwtObj } from \"../../_config/jwt-config\";\n\nmoment().tz(\"Asia/Seoul\").format();\n\ninterface Props {\n  clickedEvent: EventInfo | undefined;\n  clickedDate: string | undefined;\n  setEventModal: Dispatch<SetStateAction<boolean>>;\n}\n\nconst formatMoment = (datestring: string): any => {\n  const weeks = [\n    \"일요일\",\n    \"월요일\",\n    \"화요일\",\n    \"수요일\",\n    \"목요일\",\n    \"금요일\",\n    \"토요일\",\n  ];\n  const newDate = datestring.replace(\n    /([0-9]{4})([0-9]{2})([0-9]{2})/,\n    \"$1-$2-$3\"\n  );\n  const date = new Date(newDate);\n  return newDate + \", \" + weeks[date.getDay()];\n};\n\nexport const EventCRUD = ({\n  clickedEvent,\n  clickedDate,\n  setEventModal,\n}: Props) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [cookie] = useCookies();\n\n  const insertEvent = async () => {\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n        loginToken: cookie.loginToken,\n      },\n      body: {\n        division: \"insertEvent\",\n        title: title,\n        content: content,\n        name: cookie[\"name\"],\n        date: clickedDate,\n      },\n    };\n    console.log(requestOption);\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Calendar\",\n        requestOption\n      );\n      console.log(JSON.stringify(response));\n    } catch (err) {\n      console.log(err);\n    }\n    setEventModal(false);\n    window.location.reload();\n  };\n\n  const deleteEvent = async () => {\n    const jwtInfo: string | object = jwt.verify(\n      cookie[\"loginToken\"],\n      jwtObj.secret\n    );\n    const { ...tokenInfo } = JSON.parse(JSON.stringify(jwtInfo));\n\n    if (tokenInfo.email === clickedEvent?.email) {\n      const requestOption = {\n        headers: {\n          \"Context-Type\": \"application/json\",\n          loginToken: cookie.loginToken,\n        },\n        body: {\n          division: \"deleteEvent\",\n          idx: clickedEvent?.idx,\n        },\n      };\n      console.log(requestOption);\n      try {\n        const response = await axios.post(\n          \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Calendar\",\n          requestOption\n        );\n        console.log(JSON.stringify(response));\n      } catch (err) {\n        console.log(err);\n      }\n      setEventModal(false);\n      window.location.reload();\n    } else {\n      setEventModal(false);\n      alert(\"남의 것을 삭제할 수 없습니다.\");\n    }\n  };\n\n  return (\n    <DialogContent style={{ textAlign: \"center\" }}>\n      {clickedEvent ? (\n        <>\n          <ScheduleIcon />\n          <DialogTitle id=\"alert-dialog-slide-description\">\n            {clickedEvent.title}\n          </DialogTitle>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent.date ? formatMoment(clickedEvent?.date) : \"null\"}\n          </DialogContentText>\n          <hr />\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent.content}\n          </DialogContentText>\n          <hr />\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent.name}\n          </DialogContentText>\n          <hr />\n          <Button variant=\"contained\" color=\"primary\">\n            {\"수정\"}\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={deleteEvent}>\n            {\"삭제\"}\n          </Button>\n        </>\n      ) : (\n        <>\n          <DialogTitle id=\"alert-dialog-slide-description\">\n            <TextField\n              label=\"제목\"\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </DialogTitle>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedDate}\n          </DialogContentText>\n          <TextField\n            multiline\n            label=\"내용\"\n            onChange={(e) => {\n              setContent(e.target.value);\n            }}\n          />\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {cookie[\"name\"]}\n          </DialogContentText>\n          <Button variant=\"contained\" color=\"primary\" onClick={insertEvent}>\n            {\"저장\"}\n          </Button>\n        </>\n      )}\n    </DialogContent>\n  );\n};\n","import { EventInfo } from \"../../types/types\";\nimport FullCalendar, { EventClickArg } from \"@fullcalendar/react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { RouteComponentProps } from \"react-router\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport axios from \"axios\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport moment from \"moment-timezone\";\nimport { useCookies } from \"react-cookie\";\nimport { EventCRUD } from \"./EventCRUD\";\n\nmoment().tz(\"Asia/Seoul\").format();\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Calendar = ({ history }: RouteComponentProps) => {\n  const [cookie] = useCookies();\n  const [events, setEvents] = useState<EventInfo[]>();\n  const [eventModal, setEventModal] = useState<boolean>(false);\n  const [clickedEvent, setClickedEvent] = useState<EventInfo | undefined>();\n  const [clickedDate, setClickedDate] = useState<string>();\n\n  const requestOption = {\n    headers: {\n      \"Context-Type\": \"application/json\",\n      loginToken: cookie.loginToken,\n    },\n    body: {\n      division: \"getEvents\",\n    },\n  };\n\n  const getEvents = async () => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Calendar\",\n        requestOption\n      );\n      setEvents(\n        response.data.map((element: any) => {\n          return {\n            ...element,\n            date: moment(element.date).format(\"YYYY-MM-DD\"),\n          };\n        })\n      );\n      console.log(response.data);\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Access Denied\":\n          alert(\"접근이 제한되었습니다.\");\n          history.push(\"/gitfront\");\n          break;\n        case \"Not valid Token\":\n          alert(\"올바른 토큰이 아닙니다.\");\n          history.push(\"/gitfront\");\n          break;\n        default:\n          alert(response.data);\n          break;\n      }\n    }\n  };\n\n  const showEventDetail = (element: EventClickArg) => {\n    setEventModal(true);\n    const def = element.event._def;\n    const instance = element.event._instance;\n    setClickedDate(element.event._instance?.range.start.toString());\n    setClickedEvent({\n      idx: def.extendedProps.idx,\n      name: def.extendedProps.name,\n      color: def.extendedProps.color,\n      title: def.title,\n      content: def.extendedProps.content,\n      email: def.extendedProps.email,\n      date: moment(instance?.range.start).format(\"YYYY-MM-DD\"),\n    });\n  };\n\n  const insertEventForm = (element: DateClickArg) => {\n    setClickedEvent(undefined);\n    setClickedDate(element.dateStr);\n    setEventModal(true);\n  };\n\n  const closeEventDetail = () => {\n    setEventModal(false);\n  };\n\n  useEffect(() => {\n    getEvents();\n  }, []);\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        dateClick={insertEventForm}\n        events={events}\n        eventClick={showEventDetail}\n      />\n      <Dialog\n        open={eventModal}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={closeEventDetail}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <EventCRUD\n          clickedEvent={clickedEvent}\n          clickedDate={clickedDate}\n          setEventModal={setEventModal}\n        />\n      </Dialog>\n    </>\n  );\n};\n\nexport default Calendar;\n","import React, { useEffect, useState } from \"react\";\n\nimport { HeartSpinner } from \"react-spinners-kit\";\nimport axios from \"axios\";\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\n\nconst formatMoment = (datenumber: number): any => {\n  const weeks = [\n    \"일요일\",\n    \"월요일\",\n    \"화요일\",\n    \"수요일\",\n    \"목요일\",\n    \"금요일\",\n    \"토요일\",\n  ];\n  const datestring = datenumber.toString();\n  const newDate = datestring.replace(\n    /([0-9]{4})([0-9]{2})([0-9]{2})/,\n    \"$1-$2-$3\"\n  );\n  const date = new Date(newDate);\n  console.log();\n  return newDate + \", \" + weeks[date.getDay()];\n};\nconsole.log(3);\nconst GetHoliday = () => {\n  const [loading, setLoading] = useState(false);\n  const [year, setYear] = useState(\"2021\");\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([]);\n\n  const runFetch = async (): Promise<void> => {\n    fetchHoliday();\n  };\n\n  const fetchHoliday = async (): Promise<void> => {\n    setLoading(true);\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n      },\n      body: {\n        year: year,\n      },\n    };\n\n    const response = await axios.post(\n      \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas\",\n      requestOption\n    );\n    const data = await response.data.holidayList.item;\n    setHolidayList(await data);\n    setLoading(false);\n  };\n\n  const changeYear = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setYear(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchHoliday();\n    console.log(1);\n    return () => {\n      console.log(3);\n    };\n  }, []);\n\n  console.log(2);\n  return (\n    <>\n      {loading ? (\n        <HeartSpinner size={30} color=\"#bd2f1c\" loading={loading} />\n      ) : (\n        <div>\n          <input\n            id=\"year\"\n            type=\"number\"\n            placeholder={\"연도를 입력해주세요.\"}\n            onChange={changeYear}\n          />\n          <button onClick={runFetch}>찾기!</button>\n          {typeof holidayList == \"undefined\" ? (\n            <p>휴일을 찾을 수 없습니다.</p>\n          ) : (\n            <ul style={{ listStyle: \"none\" }}>\n              {holidayList.map((holiday, index) => (\n                <li key={index}>\n                  {holiday.dateName}({formatMoment(holiday.locdate)})\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\nexport default GetHoliday;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { WeatherInfo } from \"../types/types\";\n\nconst requestOption = (location: string) => {\n  return {\n    headers: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      location: location,\n    },\n  };\n};\n\nconst GetWeather = () => {\n  const [location, setLocation] = useState(\"Seoul\");\n  const [weatherData, setWeatherData] = useState<WeatherInfo>();\n  const getWeatherInfo = async (): Promise<void> => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Weather\",\n        requestOption(location)\n      );\n      setWeatherData(response.data);\n    } catch (err) {\n      setWeatherData(undefined);\n      const response = err.response;\n      switch (response.data) {\n        case \"Not exist area\":\n          alert(\"존재하지 않는 지역입니다.\");\n          break;\n        case \"Request path contains unescaped characters\":\n          alert(\"영어로 적어주세요.\");\n          break;\n        default:\n          alert(response.data);\n          break;\n      }\n    }\n  };\n\n  const changeLocation = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setLocation(e.target.value);\n  };\n\n  const clickButton = (e: React.MouseEvent<HTMLButtonElement>) => {\n    getWeatherInfo();\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n\n  return (\n    <div>\n      <input type=\"text\" onChange={changeLocation} />\n      <button onClick={clickButton}>찾기</button>\n      {!weatherData ? (\n        <div>없는 지역입니다.</div>\n      ) : (\n        <>\n          <p>지역 : {weatherData.country_name}</p>\n          <p>온도 : {Math.floor(weatherData.temp - 273.15)}</p>\n          <p>체감 온도 : {Math.floor(weatherData.feels_like - 273.15)}</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GetWeather;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { useCookies } from \"react-cookie\";\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\ninterface Props {\n  setOpenLoginModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst Register = ({ setOpenLoginModal }: Props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [cookie, setCookie] = useCookies();\n  const [modalStyle] = useState(getModalStyle);\n  const classes = useStyles();\n\n  const requestOption = {\n    headers: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      name: name,\n      email: email,\n      pw: pw,\n    },\n  };\n  const getRegister = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/register\",\n        requestOption\n      );\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/login\",\n        requestOption,\n        { withCredentials: true }\n      );\n      setOpenLoginModal(false);\n      setCookie(\"loginToken\", response.data.loginToken, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      setCookie(\"name\", response.data.name, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      window.location.reload();\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Duplicated email\":\n          alert(\"중복된 이메일 입니다.\");\n          break;\n        default:\n          alert(response);\n          break;\n      }\n    }\n  };\n\n  return (\n    <div style={modalStyle} className={classes.paper}>\n      <Title>{\"회원가입\"}</Title>\n      <form action=\"/\" onSubmit={getRegister}>\n        name :{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"이름\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setName(e.target.value);\n          }}\n          required\n        />\n        <br />\n        email :{\" \"}\n        <input\n          type=\"email\"\n          placeholder=\"이메일\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setEmail(e.target.value);\n          }}\n          required\n        />\n        <br />\n        password :{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"비밀번호\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setPw(e.target.value);\n          }}\n          required\n        />\n        <br />\n        <button type=\"submit\">회원가입</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Register from \"./Register\";\nimport { useCookies } from \"react-cookie\";\ninterface Props {\n  setOpenLoginModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst Login = ({ setOpenLoginModal }: Props) => {\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [modalStyle] = useState(getModalStyle);\n  const [register, setRegister] = useState(false);\n  const [cookie, setCookie] = useCookies();\n\n  const classes = useStyles();\n\n  const requestOption = {\n    header: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      email: email,\n      pw: pw,\n    },\n  };\n\n  const getToken = async () => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/login\",\n        requestOption,\n        { withCredentials: true }\n      );\n      setOpenLoginModal(false);\n      setCookie(\"loginToken\", response.data.loginToken, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      setCookie(\"name\", response.data.name, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      console.log(\"logged in\");\n      window.location.reload();\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Not valid email\": {\n          alert(\"존재하지 않는 이메일 입니다.\");\n          break;\n        }\n        case \"Not valid password\":\n          alert(\"비밀번호가 틀렸습니다.\");\n          break;\n        default:\n          alert(response);\n          break;\n      }\n    }\n  };\n\n  return (\n    <>\n      {register ? (\n        <Register setOpenLoginModal={setOpenLoginModal} />\n      ) : (\n        <div style={modalStyle} className={classes.paper}>\n          email :{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"이메일\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <br />\n          password :{\" \"}\n          <input\n            type=\"password\"\n            placeholder=\"패스워드\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setPw(e.target.value);\n            }}\n          />\n          <br />\n          <button onClick={getToken}>로그인</button>\n          <button\n            onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n              setRegister(true);\n            }}\n          >\n            회원가입\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import { memo, useEffect, useState } from \"react\";\n\ntype time = {\n  hour: number;\n  minute: number;\n  seconds: number;\n};\n\nconst NowTime = () => {\n  const [nowTime, setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0,\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds(),\n    });\n  };\n\n  useEffect(() => {\n    setInterval(setTime, 1000);\n  }, []);\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>\n        {nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.\n      </p>\n      {nowTime.hour + \":\" + nowTime.minute + \":\" + nowTime.seconds <\n      \"19:30:00\" ? (\n        <p>하지만 도연이의 퇴근 시간은 19시 30분 0초 입니다.</p>\n      ) : (\n        <p>도연이는 19시 30분에 퇴근했습니다.</p>\n      )}\n    </div>\n  );\n};\nexport default memo(NowTime);\n","import { Friend } from \"../../types/types\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\ninterface Props {\n  friend: Friend;\n  canChange: boolean;\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }: Props) => {\n  const changeTrue = () => {\n    setCanChange(true);\n  };\n\n  const insertFriendDatabase = async () => {\n    const friendInfo: Friend = {\n      name: (document.getElementById(\n        \"name\"\n      ) as HTMLInputElement).value.toString(),\n      age: parseInt(\n        (document.getElementById(\"age\") as HTMLInputElement).value.toString()\n      ),\n      nickname: (document.getElementById(\n        \"nickname\"\n      ) as HTMLInputElement).value.toString(),\n    };\n\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n      },\n      body: {\n        friendInfo,\n      },\n    };\n\n    const response = await axios.put(\n      \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend\",\n      requestOption\n    );\n    return response;\n  };\n\n  const changeFalse = async () => {\n    await insertFriendDatabase();\n    setCanChange(false);\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      {canChange === false ? (\n        <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      ) : (\n        <>\n          <p>이름 : </p>\n          <input type=\"text\" id=\"name\" defaultValue={friend.name} />\n          <p>나이 : </p>\n          <input type=\"number\" id=\"age\" />\n          <p>별명 : </p>\n          <input type=\"text\" id=\"nickname\" defaultValue={friend.nickname} />\n          <button onClick={changeFalse}>확인!</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChangeOrAddFriend;\n","import React, { memo, useEffect, useState } from \"react\";\n\nimport ChangeOrAddFriend from \"./ChangeOrAddFriend\";\nimport { Friend } from \"../../types/types\";\n\nconst SearchFriend = () => {\n  const [friendList, setFriendList] = useState<Friend[]>([]);\n  const [canChange, setCanChange] = useState(false);\n  const [filteredFriend, setFilteredFriend] = useState<Friend>({\n    idx: 0,\n    name: \"\",\n    age: 0,\n    nickname: \"\",\n  });\n\n  const getFriendList = async (): Promise<any> => {\n    const response = await fetch(\n      `https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`\n    );\n    const myFriendList = await response.json();\n\n    setFriendList(myFriendList);\n  };\n\n  const arraySearch = async () => {\n    const name = document.getElementById(\"name\") as HTMLInputElement;\n    const filterFriend = friendList.filter(\n      (element: Friend) => element.name === name.value\n    );\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: \"찾을 수 없습니다.\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    getFriendList();\n    return () => {};\n  }, [canChange]);\n\n  return (\n    <>\n      <div>\n        <input type=\"text\" id=\"name\" placeholder=\"이름을 입력해주세요.\" />\n        <button type=\"submit\" onClick={arraySearch}>\n          찾기!\n        </button>\n        {filteredFriend.idx === 0 ? (\n          <h1>이름을 입력해주세요.</h1>\n        ) : (\n          <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend\n              friend={filteredFriend}\n              canChange={canChange}\n              setCanChange={setCanChange}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(SearchFriend);\n","import { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport { Button, Modal } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Calendar from \"./components/Calendar/Calendar\";\nimport GetHoliday from \"./components/GetHoliday\";\nimport GetWeather from \"./components/GetWeather\";\nimport Login from \"./components/Login/Login\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NowTime from \"./components/NowTime\";\nimport SearchFriend from \"./components/Friends/SearchFriend\";\nimport { useCookies } from \"react-cookie\";\n\n/**\n * material ui의 modal을 사용할 경우 ref오류가 생기는데 Bar를 생성해주면 해결\n * 참조 : https://www.morolog.dev/entry/React-Material-UI%EC%97%90%EC%84%9C-Modal-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-Failed-prop-type-Warning-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0\n */\nconst Bar = React.forwardRef((props: any, ref: any) => (\n  <span {...props} ref={ref}>\n    {props.children}\n  </span>\n));\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"green\",\n};\n\nfunction App() {\n  const [cookie, setCookie, removeCookie] = useCookies();\n  const [openLoginModal, setOpenLoginModal] = useState(false);\n  const [openMenu, setOpenMenu] = useState<null | HTMLElement>(null);\n\n  const loginOpen = () => {\n    setOpenLoginModal(true);\n  };\n\n  const loginClose = () => {\n    setOpenLoginModal(false);\n  };\n\n  const logout = () => {\n    removeCookie(\"name\", { path: \"/\" });\n    removeCookie(\"loginToken\", { path: \"/\" });\n  };\n\n  const menuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setOpenMenu(event.currentTarget);\n  };\n\n  const menuClose = () => {\n    setOpenMenu(null);\n  };\n  useEffect(() => {}, [openLoginModal]);\n\n  console.log(\"2021 04 19 2\");\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {!cookie.name ? (\n        <Button variant=\"contained\" color=\"primary\" onClick={loginOpen}>\n          {\"로그인\"}\n        </Button>\n      ) : (\n        <>\n          <p>{cookie.name}님 환영합니다.</p>\n          <Button onClick={logout} variant=\"contained\" color=\"secondary\">\n            {\"로그아웃\"}\n          </Button>\n        </>\n      )}\n      <BrowserRouter>\n        <Button\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={menuOpen}\n        >\n          Open Menu\n        </Button>\n        <Modal\n          open={openLoginModal}\n          onClose={loginClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <Bar>\n            <Login setOpenLoginModal={setOpenLoginModal} />\n          </Bar>\n        </Modal>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={openMenu}\n          keepMounted\n          open={Boolean(openMenu)}\n          onClose={menuClose}\n        >\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/nowtime\">\n              {\"현재시간을 확인하세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/profile\">\n              {\"친구들의 정보를 확인하세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/showholiday\">\n              {\"이번년도 휴일을 알아보세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/showWeather\">\n              {\"현재 날씨를 보고 싶어요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/calendar\">\n              {\"캘린더\"}\n            </Link>\n          </MenuItem>\n        </Menu>\n        <hr />\n        <Switch>\n          {/* <Route path='/' exact={true} component={NowTime}/> */}\n          <Route path=\"/nowtime\" exact component={NowTime} />\n          <Route path=\"/profile\" exact component={SearchFriend} />\n          <Route path=\"/showholiday\" exact component={GetHoliday} />\n          <Route path=\"/showWeather\" exact component={GetWeather} />\n          <Route path=\"/calendar\" exact component={Calendar} />\n          <Route path=\"/login\" exact component={Login} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}