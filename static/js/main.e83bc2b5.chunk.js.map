{"version":3,"sources":["components/Calendar/Calendar.tsx","components/GetHoliday.tsx","components/GetWeather.tsx","components/Login/Register.tsx","components/Login/Login.tsx","components/NowTime.tsx","components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","App.tsx","index.tsx"],"names":["moment","tz","format","formatMoment","datestring","newDate","replace","Date","getDay","Transition","React","forwardRef","props","ref","Slide","direction","Calendar","history","useState","setCheck","useCookies","cookie","events","setEvents","eventModal","setEventModal","clickedEvent","setClickedEvent","year","month","dayInfo","requestOption","headers","loginToken","body","getEvents","a","axios","post","response","data","map","element","date","console","log","alert","push","useEffect","plugins","dayGridPlugin","interactionPlugin","initialView","dateClick","args","dateStr","eventClick","def","event","_def","instance","_instance","title","content","extendedProps","email","range","start","dayHeaderDidMount","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","datenumber","toString","GetHoliday","loading","setLoading","setYear","holidayList","setHolidayList","runFetch","fetchHoliday","item","size","color","type","placeholder","onChange","e","target","value","onClick","style","listStyle","holiday","index","dateName","locdate","location","GetWeather","setLocation","weatherData","setWeatherData","getWeatherInfo","undefined","country_name","Math","floor","temp","feels_like","Title","styled","h1","getModalStyle","top","left","transform","useStyles","makeStyles","theme","createStyles","paper","alignItems","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Register","setOpenLoginModal","name","setName","setEmail","pw","setPw","setCookie","modalStyle","classes","getRegister","preventDefault","withCredentials","path","maxAge","window","reload","className","action","onSubmit","required","Login","register","setRegister","header","getToken","NowTime","hour","minute","seconds","nowTime","setNowTime","setTime","getHours","getMinutes","getSeconds","setInterval","memo","ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","friendInfo","document","getElementById","age","parseInt","nickname","put","changeFalse","defaultValue","SearchFriend","friendList","setFriendList","idx","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","length","Bar","children","linkStyle","textDecoration","App","removeCookie","openLoginModal","openMenu","setOpenMenu","menuClose","textAlign","Button","variant","aria-controls","aria-haspopup","currentTarget","Modal","Menu","anchorEl","Boolean","MenuItem","to","exact","component","ReactDOM","render","CookiesProvider"],"mappings":"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","file":"static/js/main.e83bc2b5.chunk.js","sourcesContent":["import { Day, EventInfo } from \"../../types/types\";\nimport FullCalendar, { EventClickArg } from \"@fullcalendar/react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { RouteComponentProps } from \"react-router\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport axios from \"axios\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport moment from \"moment-timezone\";\nimport { useCookies } from \"react-cookie\";\n\nmoment().tz(\"Asia/Seoul\").format();\n\nconst formatMoment = (datestring: string): any => {\n  const weeks = [\n    \"일요일\",\n    \"월요일\",\n    \"화요일\",\n    \"수요일\",\n    \"목요일\",\n    \"금요일\",\n    \"토요일\",\n  ];\n  const newDate = datestring.replace(\n    /([0-9]{4})([0-9]{2})([0-9]{2})/,\n    \"$1-$2-$3\"\n  );\n  const date = new Date(newDate);\n  return newDate + \", \" + weeks[date.getDay()];\n};\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Calendar = ({ history }: RouteComponentProps) => {\n  const [check, setCheck] = useState(false);\n  const [cookie] = useCookies();\n  const [events, setEvents] = useState<EventInfo[]>();\n  const [eventModal, setEventModal] = useState<boolean>(false);\n  const [clickedEvent, setClickedEvent] = useState<EventInfo>();\n  const [dayInfo, setDayInfo] = useState<Day>({\n    year: 2021,\n    month: 4,\n  });\n\n  const requestOption = {\n    headers: {\n      \"Context-Type\": \"application/json\",\n      loginToken: cookie.loginToken,\n    },\n    body: {\n      year: dayInfo.year,\n      month: dayInfo.month,\n    },\n  };\n\n  const getEvents = async () => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Calendar\",\n        requestOption\n      );\n      setCheck(true);\n      setEvents(\n        response.data.map((element: any) => {\n          return {\n            ...element,\n            date: moment(element.date).format(\"YYYY-MM-DD\"),\n          };\n        })\n      );\n      console.log(response.data);\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Access Denied\":\n          alert(\"접근이 제한되었습니다.\");\n          history.push(\"/gitfront\");\n          break;\n        case \"Not valid Token\":\n          alert(\"올바른 토큰이 아닙니다.\");\n          history.push(\"/gitfront\");\n          break;\n        default:\n          alert(response.data);\n          break;\n      }\n    }\n  };\n\n  const showEventDetail = (element: EventClickArg) => {\n    setEventModal(true);\n    const def = element.event._def;\n    const instance = element.event._instance;\n    setClickedEvent({\n      title: def.title,\n      content: def.extendedProps.content,\n      email: def.extendedProps.email,\n      date: moment(instance?.range.start).format(\"YYYY-MM-DD\"),\n    });\n  };\n\n  const closeEventDetail = () => {\n    setEventModal(false);\n  };\n\n  useEffect(() => {\n    getEvents();\n  }, [dayInfo]);\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        dateClick={(args) => alert(args.dateStr)}\n        events={events}\n        eventClick={showEventDetail}\n        dayHeaderDidMount={(args) => {\n          console.log(args);\n        }}\n      />\n      <Dialog\n        open={eventModal}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={closeEventDetail}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {clickedEvent?.title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent?.date ? formatMoment(clickedEvent?.date) : \"null\"}\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent?.content}\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent?.email}\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Calendar;\n","import React, { useEffect, useState } from \"react\";\n\nimport { HeartSpinner } from \"react-spinners-kit\";\nimport axios from \"axios\";\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\n\nconst formatMoment = (datenumber: number): any => {\n  const weeks = [\n    \"일요일\",\n    \"월요일\",\n    \"화요일\",\n    \"수요일\",\n    \"목요일\",\n    \"금요일\",\n    \"토요일\",\n  ];\n  const datestring = datenumber.toString();\n  const newDate = datestring.replace(\n    /([0-9]{4})([0-9]{2})([0-9]{2})/,\n    \"$1-$2-$3\"\n  );\n  const date = new Date(newDate);\n  console.log();\n  return newDate + \", \" + weeks[date.getDay()];\n};\nconsole.log(3);\nconst GetHoliday = () => {\n  const [loading, setLoading] = useState(false);\n  const [year, setYear] = useState(\"2021\");\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([]);\n\n  const runFetch = async (): Promise<void> => {\n    fetchHoliday();\n  };\n\n  const fetchHoliday = async (): Promise<void> => {\n    setLoading(true);\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n      },\n      body: {\n        year: year,\n      },\n    };\n\n    const response = await axios.post(\n      \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas\",\n      requestOption\n    );\n    const data = await response.data.holidayList.item;\n    setHolidayList(await data);\n    setLoading(false);\n  };\n\n  const changeYear = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setYear(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchHoliday();\n    console.log(1);\n    return () => {\n      console.log(3);\n    };\n  }, []);\n\n  console.log(2);\n  return (\n    <>\n      {loading ? (\n        <HeartSpinner size={30} color=\"#bd2f1c\" loading={loading} />\n      ) : (\n        <div>\n          <input\n            id=\"year\"\n            type=\"number\"\n            placeholder={\"연도를 입력해주세요.\"}\n            onChange={changeYear}\n          />\n          <button onClick={runFetch}>찾기!</button>\n          {typeof holidayList == \"undefined\" ? (\n            <p>휴일을 찾을 수 없습니다.</p>\n          ) : (\n            <ul style={{ listStyle: \"none\" }}>\n              {holidayList.map((holiday, index) => (\n                <li key={index}>\n                  {holiday.dateName}({formatMoment(holiday.locdate)})\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\nexport default GetHoliday;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { WeatherInfo } from \"../types/types\";\n\nconst requestOption = (location: string) => {\n  return {\n    headers: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      location: location,\n    },\n  };\n};\n\nconst GetWeather = () => {\n  const [location, setLocation] = useState(\"Seoul\");\n  const [weatherData, setWeatherData] = useState<WeatherInfo>();\n  const getWeatherInfo = async (): Promise<void> => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Weather\",\n        requestOption(location)\n      );\n      setWeatherData(response.data);\n    } catch (err) {\n      setWeatherData(undefined);\n      const response = err.response;\n      switch (response.data) {\n        case \"Not exist area\":\n          alert(\"존재하지 않는 지역입니다.\");\n          break;\n        case \"Request path contains unescaped characters\":\n          alert(\"영어로 적어주세요.\");\n          break;\n        default:\n          alert(response.data);\n          break;\n      }\n    }\n  };\n\n  const changeLocation = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setLocation(e.target.value);\n  };\n\n  const clickButton = (e: React.MouseEvent<HTMLButtonElement>) => {\n    getWeatherInfo();\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n\n  return (\n    <div>\n      <input type=\"text\" onChange={changeLocation} />\n      <button onClick={clickButton}>찾기</button>\n      {!weatherData ? (\n        <div>없는 지역입니다.</div>\n      ) : (\n        <>\n          <p>지역 : {weatherData.country_name}</p>\n          <p>온도 : {Math.floor(weatherData.temp - 273.15)}</p>\n          <p>체감 온도 : {Math.floor(weatherData.feels_like - 273.15)}</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GetWeather;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { useCookies } from \"react-cookie\";\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\ninterface Props {\n  setOpenLoginModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst Register = ({ setOpenLoginModal }: Props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [cookie, setCookie] = useCookies();\n  const [modalStyle] = useState(getModalStyle);\n  const classes = useStyles();\n\n  const requestOption = {\n    headers: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      name: name,\n      email: email,\n      pw: pw,\n    },\n  };\n  const getRegister = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/register\",\n        requestOption\n      );\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/login\",\n        requestOption,\n        { withCredentials: true }\n      );\n      setOpenLoginModal(false);\n      setCookie(\"loginToken\", response.data.loginToken, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      setCookie(\"name\", response.data.name, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      window.location.reload();\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Duplicated email\":\n          alert(\"중복된 이메일 입니다.\");\n          break;\n        default:\n          alert(response);\n          break;\n      }\n    }\n  };\n\n  return (\n    <div style={modalStyle} className={classes.paper}>\n      <Title>{\"회원가입\"}</Title>\n      <form action=\"/\" onSubmit={getRegister}>\n        name :{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"이름\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setName(e.target.value);\n          }}\n          required\n        />\n        <br />\n        email :{\" \"}\n        <input\n          type=\"email\"\n          placeholder=\"이메일\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setEmail(e.target.value);\n          }}\n          required\n        />\n        <br />\n        password :{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"비밀번호\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setPw(e.target.value);\n          }}\n          required\n        />\n        <br />\n        <button type=\"submit\">회원가입</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Register from \"./Register\";\nimport { useCookies } from \"react-cookie\";\ninterface Props {\n  setOpenLoginModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst Login = ({ setOpenLoginModal }: Props) => {\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [modalStyle] = useState(getModalStyle);\n  const [register, setRegister] = useState(false);\n  const [cookie, setCookie, removeCookie] = useCookies();\n\n  const classes = useStyles();\n\n  const requestOption = {\n    header: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      email: email,\n      pw: pw,\n    },\n  };\n\n  const getToken = async () => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/login\",\n        requestOption,\n        { withCredentials: true }\n      );\n      setOpenLoginModal(false);\n      setCookie(\"loginToken\", response.data.loginToken, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      setCookie(\"name\", response.data.name, {\n        path: \"/\",\n        maxAge: response.data.maxAge,\n      });\n      console.log(\"logged in\");\n      window.location.reload();\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Not valid email\": {\n          alert(\"존재하지 않는 이메일 입니다.\");\n          break;\n        }\n        case \"Not valid password\":\n          alert(\"비밀번호가 틀렸습니다.\");\n          break;\n        default:\n          alert(response);\n          break;\n      }\n    }\n  };\n\n  return (\n    <>\n      {register ? (\n        <Register setOpenLoginModal={setOpenLoginModal} />\n      ) : (\n        <div style={modalStyle} className={classes.paper}>\n          email :{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"이메일\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <br />\n          password :{\" \"}\n          <input\n            type=\"password\"\n            placeholder=\"패스워드\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setPw(e.target.value);\n            }}\n          />\n          <br />\n          <button onClick={getToken}>로그인</button>\n          <button\n            onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n              setRegister(true);\n            }}\n          >\n            회원가입\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import { memo, useEffect, useState } from \"react\";\n\ntype time = {\n  hour: number;\n  minute: number;\n  seconds: number;\n};\n\nconst NowTime = () => {\n  const [nowTime, setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0,\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds(),\n    });\n  };\n\n  useEffect(() => {\n    setInterval(setTime, 1000);\n  }, []);\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>\n        {nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.\n      </p>\n      {nowTime.hour + \":\" + nowTime.minute + \":\" + nowTime.seconds <\n      \"19:30:00\" ? (\n        <p>하지만 도연이의 퇴근 시간은 19시 30분 0초 입니다.</p>\n      ) : (\n        <p>도연이는 19시 30분에 퇴근했습니다.</p>\n      )}\n    </div>\n  );\n};\nexport default memo(NowTime);\n","import { Friend } from \"../../types/types\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\ninterface Props {\n  friend: Friend;\n  canChange: boolean;\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }: Props) => {\n  const changeTrue = () => {\n    setCanChange(true);\n  };\n\n  const insertFriendDatabase = async () => {\n    const friendInfo: Friend = {\n      name: (document.getElementById(\n        \"name\"\n      ) as HTMLInputElement).value.toString(),\n      age: parseInt(\n        (document.getElementById(\"age\") as HTMLInputElement).value.toString()\n      ),\n      nickname: (document.getElementById(\n        \"nickname\"\n      ) as HTMLInputElement).value.toString(),\n    };\n\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n      },\n      body: {\n        friendInfo,\n      },\n    };\n\n    const response = await axios.put(\n      \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend\",\n      requestOption\n    );\n    return response;\n  };\n\n  const changeFalse = async () => {\n    await insertFriendDatabase();\n    setCanChange(false);\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      {canChange === false ? (\n        <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      ) : (\n        <>\n          <p>이름 : </p>\n          <input type=\"text\" id=\"name\" defaultValue={friend.name} />\n          <p>나이 : </p>\n          <input type=\"number\" id=\"age\" />\n          <p>별명 : </p>\n          <input type=\"text\" id=\"nickname\" defaultValue={friend.nickname} />\n          <button onClick={changeFalse}>확인!</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChangeOrAddFriend;\n","import React, { memo, useEffect, useState } from \"react\";\n\nimport ChangeOrAddFriend from \"./ChangeOrAddFriend\";\nimport { Friend } from \"../../types/types\";\n\nconst SearchFriend = () => {\n  const [friendList, setFriendList] = useState<Friend[]>([]);\n  const [canChange, setCanChange] = useState(false);\n  const [filteredFriend, setFilteredFriend] = useState<Friend>({\n    idx: 0,\n    name: \"\",\n    age: 0,\n    nickname: \"\",\n  });\n\n  const getFriendList = async (): Promise<any> => {\n    const response = await fetch(\n      `https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`\n    );\n    const myFriendList = await response.json();\n\n    setFriendList(myFriendList);\n  };\n\n  const arraySearch = async () => {\n    const name = document.getElementById(\"name\") as HTMLInputElement;\n    const filterFriend = friendList.filter(\n      (element: Friend) => element.name === name.value\n    );\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: \"찾을 수 없습니다.\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    getFriendList();\n    return () => {};\n  }, [canChange]);\n\n  return (\n    <>\n      <div>\n        <input type=\"text\" id=\"name\" placeholder=\"이름을 입력해주세요.\" />\n        <button type=\"submit\" onClick={arraySearch}>\n          찾기!\n        </button>\n        {filteredFriend.idx === 0 ? (\n          <h1>이름을 입력해주세요.</h1>\n        ) : (\n          <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend\n              friend={filteredFriend}\n              canChange={canChange}\n              setCanChange={setCanChange}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(SearchFriend);\n","import { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport { Button, Modal } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Calendar from \"./components/Calendar/Calendar\";\nimport GetHoliday from \"./components/GetHoliday\";\nimport GetWeather from \"./components/GetWeather\";\nimport Login from \"./components/Login/Login\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NowTime from \"./components/NowTime\";\nimport SearchFriend from \"./components/Friends/SearchFriend\";\nimport { useCookies } from \"react-cookie\";\n\n/**\n * material ui의 modal을 사용할 경우 ref오류가 생기는데 Bar를 생성해주면 해결\n * 참조 : https://www.morolog.dev/entry/React-Material-UI%EC%97%90%EC%84%9C-Modal-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-Failed-prop-type-Warning-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0\n */\nconst Bar = React.forwardRef((props: any, ref: any) => (\n  <span {...props} ref={ref}>\n    {props.children}\n  </span>\n));\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"green\",\n};\n\nfunction App() {\n  const [cookie, setCookie, removeCookie] = useCookies();\n  const [openLoginModal, setOpenLoginModal] = useState(false);\n  const [openMenu, setOpenMenu] = useState<null | HTMLElement>(null);\n\n  const loginOpen = () => {\n    setOpenLoginModal(true);\n  };\n\n  const loginClose = () => {\n    setOpenLoginModal(false);\n  };\n\n  const logout = () => {\n    removeCookie(\"name\", { path: \"/\" });\n    removeCookie(\"loginToken\", { path: \"/\" });\n  };\n\n  const menuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setOpenMenu(event.currentTarget);\n  };\n\n  const menuClose = () => {\n    setOpenMenu(null);\n  };\n  useEffect(() => {}, [openLoginModal]);\n\n  console.log(\"2021 04 19 2\");\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {!cookie.name ? (\n        <Button variant=\"contained\" color=\"primary\" onClick={loginOpen}>\n          {\"로그인\"}\n        </Button>\n      ) : (\n        <>\n          <p>{cookie.name}님 환영합니다.</p>\n          <Button onClick={logout} variant=\"contained\" color=\"secondary\">\n            {\"로그아웃\"}\n          </Button>\n        </>\n      )}\n      <BrowserRouter>\n        <Button\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={menuOpen}\n        >\n          Open Menu\n        </Button>\n        <Modal\n          open={openLoginModal}\n          onClose={loginClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <Bar>\n            <Login setOpenLoginModal={setOpenLoginModal} />\n          </Bar>\n        </Modal>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={openMenu}\n          keepMounted\n          open={Boolean(openMenu)}\n          onClose={menuClose}\n        >\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/nowtime\">\n              {\"현재시간을 확인하세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/profile\">\n              {\"친구들의 정보를 확인하세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/showholiday\">\n              {\"이번년도 휴일을 알아보세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/showWeather\">\n              {\"현재 날씨를 보고 싶어요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/calendar\">\n              {\"캘린더\"}\n            </Link>\n          </MenuItem>\n        </Menu>\n        <hr />\n        <Switch>\n          {/* <Route path='/' exact={true} component={NowTime}/> */}\n          <Route path=\"/nowtime\" exact component={NowTime} />\n          <Route path=\"/profile\" exact component={SearchFriend} />\n          <Route path=\"/showholiday\" exact component={GetHoliday} />\n          <Route path=\"/showWeather\" exact component={GetWeather} />\n          <Route path=\"/calendar\" exact component={Calendar} />\n          <Route path=\"/login\" exact component={Login} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}