{"version":3,"sources":["components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","components/GetHoliday.tsx","components/NowTime.tsx","App.tsx","index.tsx"],"names":["ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","a","friendInfo","name","document","getElementById","value","toString","age","parseInt","nickname","requestOption","headers","body","axios","put","response","changeFalse","useEffect","onClick","type","id","defaultValue","SearchFriend","useState","friendList","setFriendList","idx","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","element","length","placeholder","memo","formatMoment","datenumber","newDate","replace","date","Date","console","log","getDay","GetHoliday","year","setYear","holidayList","setHolidayList","runFetch","fetchHoliday","post","data","item","onChange","e","target","map","holiday","index","dateName","locdate","NowTime","hour","minute","seconds","nowTime","setNowTime","setTime","getHours","getMinutes","getSeconds","setInterval","App","to","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.e53436b3.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Friend } from '../../types/types';\nimport axios from 'axios';\n\ninterface Props {\n  friend: Friend\n  canChange: boolean\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }:Props) => {\n\n  const changeTrue = () => {\n    setCanChange(true)\n  }\n\n  const insertFriendDatabase = async () => {\n\n    const friendInfo:Friend = {\n      name: (document.getElementById('name') as HTMLInputElement).value.toString(),\n      age: parseInt((document.getElementById('age') as HTMLInputElement).value.toString()),\n      nickname: (document.getElementById('nickname') as HTMLInputElement).value.toString()\n    }\n\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        friendInfo\n      }\n    };\n    \n    const response = await axios.put('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend',requestOption);\n    return response\n  }\n\n  const changeFalse = async () => {\n    await insertFriendDatabase()\n    setCanChange(false)\n  }\n  \n  useEffect(() => {\n  },[]);\n\n  return (\n    <div>\n      {canChange === false ?\n      <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      :\n      <>\n        <p>이름 : </p><input type=\"text\" id='name' defaultValue={friend.name} />\n        <p>나이 : </p><input type=\"number\" id='age' />\n        <p>별명 : </p><input type=\"text\" id='nickname' defaultValue={friend.nickname} />\n        <button onClick={changeFalse}>확인!</button>\n      </>\n      }\n    </div>\n  );\n}\n\nexport default ChangeOrAddFriend;","import React,{ useState,memo,useEffect } from 'react';\nimport { Friend } from '../../types/types';\nimport ChangeOrAddFriend from './ChangeOrAddFriend';\n\nconst SearchFriend = () => {\n  \n  const [friendList,setFriendList] = useState<Friend[]>([]);\n  const [canChange,setCanChange] = useState(false);\n  const [filteredFriend,setFilteredFriend] = useState<Friend>({\n      idx: 0,\n      name: '',\n      age: 0,\n      nickname: ''\n    }\n  );\n  \n  const getFriendList = async() : Promise<any> => {\n    const response = await fetch(`https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`);\n    const myFriendList = await response.json()\n    \n    setFriendList(myFriendList);\n  }\n\n  const arraySearch = async () => {\n    const name = document.getElementById('name') as HTMLInputElement;\n    const filterFriend =  friendList.filter((element:Friend) => element.name === name.value);\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: '찾을 수 없습니다.'\n      });\n    }\n  }\n\n  useEffect(() => {\n    getFriendList();\n    return () => {}\n  },[canChange])\n  \n  return (\n    <>\n      <div>\n        <input type=\"text\" id='name' placeholder='이름을 입력해주세요.'/>\n        <button type=\"submit\" onClick={arraySearch}>찾기!</button>\n        {filteredFriend.idx === 0 ? <h1>이름을 입력해주세요.</h1>\n        : <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend friend={filteredFriend} canChange={canChange} setCanChange={setCanChange} />\n          </div>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default memo(SearchFriend);","import React, { useState,useEffect,memo } from 'react';\nimport axios from 'axios';\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\nconst formatMoment = (datenumber: number): any => {\n  const weeks = ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'];\n  const datestring = datenumber.toString();\n  const newDate = datestring.replace(/([0-9]{4})([0-9]{2})([0-9]{2})/,'$1-$2-$3');\n  const date = new Date(newDate);\n  console.log()\n  return newDate + ', ' + weeks[date.getDay()];\n}\n\nconst GetHoliday = () => {\n  const [year, setYear] = useState('2021');\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([]);\n\n  const runFetch = async():Promise<void> => {\n    fetchHoliday()\n  }\n\n  const fetchHoliday = async ():Promise<void> => {\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        year: year\n      }\n    };\n\n    const response = await axios.post('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas',requestOption);\n    const data = await response.data.holidayList.item;\n    setHolidayList(await data);\n  }\n  const changeYear = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setYear(e.target.value);\n  }\n\n  useEffect(() => {\n    fetchHoliday();\n  },[])\n\n  return (\n    <div>\n      <input id='year' type=\"number\" placeholder={'연도를 입력해주세요.'} onChange={changeYear}/>\n      <button onClick={runFetch}>찾기!</button>\n      {(typeof holidayList == 'undefined') ? (\n      <p>휴일을 찾을 수 없습니다.</p>)\n      : <ul>\n        {holidayList.map((holiday,index) => \n          <li key={index}>\n            {holiday.dateName}({formatMoment(holiday.locdate)})\n          </li>\n        )}\n      </ul>\n      }\n    </div>\n  );\n}\nexport default GetHoliday;","import { useState,useEffect,memo } from 'react';\n\ntype time = {\n  hour: number,\n  minute: number,\n  seconds: number\n}\n\nconst NowTime = () => {\n  const [nowTime,setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds()\n    });\n  }\n\n  useEffect(() => {\n    setInterval(setTime,1000);\n  },[])\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>{nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.</p>\n      {(nowTime.hour+':'+nowTime.minute+':'+nowTime.seconds) < ('19:30:00') ?\n        <p>하지만 도연이의 퇴근 시간은 19시 30분 0초 입니다.</p>\n      : <p>도연이는 19시 30분에 퇴근했습니다.</p>\n      }\n    </div>\n  );\n}\nexport default memo(NowTime);","import React from 'react';\nimport { Route, BrowserRouter, Link, Switch } from 'react-router-dom'\n// import NowTime from './components/NowTime';\nimport SearchFriend from './components/Friends/SearchFriend';\nimport GetHoliday from './components/GetHoliday';\nimport NowTime from './components/NowTime';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      {/* <NowTime /> */}\n        <ul>\n          <li>\n            <Link to='/nowtime'>현재시간을 확인하세요</Link>\n          </li>\n          <li>\n            <Link to='/profile'>친구들의 정보를 확인하세요</Link>\n          </li>\n          <li>\n            <Link to='/showholiday'>이번년도 휴일을 알아보세요</Link>\n          </li>\n        </ul>\n        <hr/>\n      <Switch>\n        {/* <Route path='/' exact={true} component={NowTime}/> */}\n        <Route path='/nowtime' exact component={NowTime}/>\n        <Route path='/profile' exact component={SearchFriend}/>\n        <Route path='/showholiday' exact component={GetHoliday} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}