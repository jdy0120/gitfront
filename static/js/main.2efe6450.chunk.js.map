{"version":3,"sources":["components/Chatting/Chatting.tsx","components/GetHoliday.tsx","components/NowTime.tsx","components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","App.tsx","index.tsx"],"names":["socket","io","Chatting","useState","message","setmessage","on","data","console","log","comment","type","onChange","e","target","value","onClick","emit","formatMoment","datenumber","newDate","toString","replace","date","Date","getDay","GetHoliday","year","setYear","holidayList","setHolidayList","runFetch","a","fetchHoliday","requestOption","headers","body","axios","post","response","item","useEffect","id","placeholder","map","holiday","index","dateName","locdate","NowTime","hour","minute","seconds","nowTime","setNowTime","setTime","getHours","getMinutes","getSeconds","setInterval","memo","ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","friendInfo","name","document","getElementById","age","parseInt","nickname","put","changeFalse","defaultValue","SearchFriend","friendList","setFriendList","idx","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","element","length","linkStyle","textDecoration","color","App","React","anchorEl","setAnchorEl","handleClose","Button","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","style","to","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.2efe6450.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost/3030');\nconst Chatting = () => {\n  const [message,setmessage] = useState('');\n  socket.on('', (data) => {\n    console.log(data.comment);\n  });\n\n  const sendMsg = () => {\n    socket.emit('msg', {\n      message\n    });\n  }\n\n  const getMessage = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setmessage(e.target.value);\n  }\n\n  return (\n    <>\n      <div>\n\n      </div>\n      <div>\n        <input type=\"text\" onChange={getMessage}/>\n        <input type=\"button\" onClick={sendMsg}/>\n      </div>\n    </>\n  );\n}\n\nexport default Chatting;","import React, { memo, useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\nconst formatMoment = (datenumber: number): any => {\n  const weeks = ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'];\n  const datestring = datenumber.toString();\n  const newDate = datestring.replace(/([0-9]{4})([0-9]{2})([0-9]{2})/,'$1-$2-$3');\n  const date = new Date(newDate);\n  console.log()\n  return newDate + ', ' + weeks[date.getDay()];\n}\n\nconst GetHoliday = () => {\n  const [year, setYear] = useState('2021');\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([]);\n\n  const runFetch = async():Promise<void> => {\n    fetchHoliday()\n  }\n\n  const fetchHoliday = async ():Promise<void> => {\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        year: year\n      }\n    };\n\n    const response = await axios.post('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas',requestOption);\n    const data = await response.data.holidayList.item;\n    setHolidayList(await data);\n  }\n  const changeYear = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setYear(e.target.value);\n  }\n\n  useEffect(() => {\n    fetchHoliday();\n  },[])\n\n  return (\n    <div>\n      <input id='year' type=\"number\" placeholder={'연도를 입력해주세요.'} onChange={changeYear}/>\n      <button onClick={runFetch}>찾기!</button>\n      {(typeof holidayList == 'undefined') ? (\n      <p>휴일을 찾을 수 없습니다.</p>)\n      : <ul>\n        {holidayList.map((holiday,index) => \n          <li key={index}>\n            {holiday.dateName}({formatMoment(holiday.locdate)})\n          </li>\n        )}\n      </ul>\n      }\n    </div>\n  );\n}\nexport default GetHoliday;","import { memo, useEffect, useState } from 'react';\n\ntype time = {\n  hour: number,\n  minute: number,\n  seconds: number\n}\n\nconst NowTime = () => {\n  const [nowTime,setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds()\n    });\n  }\n\n  useEffect(() => {\n    setInterval(setTime,1000);\n  },[])\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>{nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.</p>\n      {(nowTime.hour+':'+nowTime.minute+':'+nowTime.seconds) < ('19:30:00') ?\n        <p>하지만 도연이의 퇴근 시간은 19시 30분 0초 입니다.</p>\n      : <p>도연이는 19시 30분에 퇴근했습니다.</p>\n      }\n    </div>\n  );\n}\nexport default memo(NowTime);","import { Friend } from '../../types/types';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\ninterface Props {\n  friend: Friend\n  canChange: boolean\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }:Props) => {\n\n  const changeTrue = () => {\n    setCanChange(true)\n  }\n\n  const insertFriendDatabase = async () => {\n\n    const friendInfo:Friend = {\n      name: (document.getElementById('name') as HTMLInputElement).value.toString(),\n      age: parseInt((document.getElementById('age') as HTMLInputElement).value.toString()),\n      nickname: (document.getElementById('nickname') as HTMLInputElement).value.toString()\n    }\n\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        friendInfo\n      }\n    };\n    \n    const response = await axios.put('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend',requestOption);\n    return response;\n  }\n\n  const changeFalse = async () => {\n    await insertFriendDatabase()\n    setCanChange(false)\n  }\n  \n  useEffect(() => {\n  },[]);\n\n  return (\n    <div>\n      {canChange === false ?\n      <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      :\n      <>\n        <p>이름 : </p><input type=\"text\" id='name' defaultValue={friend.name} />\n        <p>나이 : </p><input type=\"number\" id='age' />\n        <p>별명 : </p><input type=\"text\" id='nickname' defaultValue={friend.nickname} />\n        <button onClick={changeFalse}>확인!</button>\n      </>\n      }\n    </div>\n  );\n}\n\nexport default ChangeOrAddFriend;","import React,{ memo, useEffect, useState } from 'react';\n\nimport ChangeOrAddFriend from './ChangeOrAddFriend';\nimport { Friend } from '../../types/types';\n\nconst SearchFriend = () => {\n  \n  const [friendList,setFriendList] = useState<Friend[]>([]);\n  const [canChange,setCanChange] = useState(false);\n  const [filteredFriend,setFilteredFriend] = useState<Friend>({\n      idx: 0,\n      name: '',\n      age: 0,\n      nickname: ''\n    }\n  );\n  \n  const getFriendList = async() : Promise<any> => {\n    const response = await fetch(`https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`);\n    const myFriendList = await response.json()\n    \n    setFriendList(myFriendList);\n  }\n\n  const arraySearch = async () => {\n    const name = document.getElementById('name') as HTMLInputElement;\n    const filterFriend =  friendList.filter((element:Friend) => element.name === name.value);\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: '찾을 수 없습니다.'\n      });\n    }\n  }\n\n  useEffect(() => {\n    getFriendList();\n    return () => {}\n  },[canChange])\n  \n  return (\n    <>\n      <div>\n        <input type=\"text\" id='name' placeholder='이름을 입력해주세요.'/>\n        <button type=\"submit\" onClick={arraySearch}>찾기!</button>\n        {filteredFriend.idx === 0 ? <h1>이름을 입력해주세요.</h1>\n        : <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend friend={filteredFriend} canChange={canChange} setCanChange={setCanChange} />\n          </div>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default memo(SearchFriend);","import { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\n\nimport { Button } from '@material-ui/core'\nimport Chatting from './components/Chatting/Chatting';\nimport GetHoliday from './components/GetHoliday';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NowTime from './components/NowTime';\nimport React from 'react';\nimport SearchFriend from './components/Friends/SearchFriend';\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: 'green'\n}\n\nfunction App() {\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <BrowserRouter>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Open Menu\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}><Link style={linkStyle} to='/nowtime'>현재시간을 확인하세요</Link></MenuItem>\n        <MenuItem onClick={handleClose}><Link style={linkStyle} to='/profile'>친구들의 정보를 확인하세요</Link></MenuItem>\n        <MenuItem onClick={handleClose}><Link style={linkStyle} to='/showholiday'>이번년도 휴일을 알아보세요</Link></MenuItem>\n        <MenuItem onClick={handleClose}><Link style={linkStyle} to='/Chatting'/>채팅을 쳐보세요</MenuItem>\n      </Menu>\n        <hr/>\n      <Switch>\n        {/* <Route path='/' exact={true} component={NowTime}/> */}\n        <Route path='/nowtime' exact component={NowTime}/>\n        <Route path='/profile' exact component={SearchFriend}/>\n        <Route path='/showholiday' exact component={GetHoliday} />\n        <Route path='/Chatting' exact component={Chatting}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}