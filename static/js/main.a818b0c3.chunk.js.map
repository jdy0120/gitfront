{"version":3,"sources":["components/GetHoliday.tsx","components/NowTime.tsx","components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","components/GetWeather.tsx","App.tsx","index.tsx"],"names":["formatMoment","datenumber","newDate","toString","replace","date","Date","console","log","getDay","GetHoliday","useState","loading","setLoading","year","setYear","holidayList","setHolidayList","runFetch","a","fetchHoliday","requestOption","headers","body","axios","post","response","data","item","useEffect","size","color","id","type","placeholder","onChange","e","target","value","onClick","style","listStyle","map","holiday","index","dateName","locdate","memo","NowTime","hour","minute","seconds","nowTime","setNowTime","setTime","getHours","getMinutes","getSeconds","setInterval","ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","friendInfo","name","document","getElementById","age","parseInt","nickname","put","changeFalse","defaultValue","SearchFriend","friendList","setFriendList","idx","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","element","length","location","GetWeather","setLocation","weatherData","setWeatherData","getWeatherInfo","undefined","status","country_name","Math","floor","temp","feels_like","linkStyle","textDecoration","App","React","anchorEl","setAnchorEl","handleClose","textAlign","Button","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","to","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.a818b0c3.chunk.js","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\n\nimport { HeartSpinner } from 'react-spinners-kit';\nimport axios from 'axios';\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\n\nconst formatMoment = (datenumber: number): any => {\n  const weeks = ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'];\n  const datestring = datenumber.toString();\n  const newDate = datestring.replace(/([0-9]{4})([0-9]{2})([0-9]{2})/,'$1-$2-$3');\n  const date = new Date(newDate);\n  console.log()\n  return newDate + ', ' + weeks[date.getDay()];\n}\n\nconst GetHoliday = () => {\n  const [loading,setLoading] = useState(false);\n  const [year, setYear] = useState('2021');\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([]);\n\n  const runFetch = async():Promise<void> => {\n    fetchHoliday()\n  }\n\n  const fetchHoliday = async ():Promise<void> => {\n    setLoading(true);\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        year: year\n      }\n    };\n\n    const response = await axios.post('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas',requestOption);\n    const data = await response.data.holidayList.item;\n    setHolidayList(await data);\n    setLoading(false);\n  }\n\n  const changeYear = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setYear(e.target.value);\n  }\n\n  useEffect(() => {\n    fetchHoliday();\n  },[])\n\n  return (\n    <>\n      {loading ?\n      <HeartSpinner size={30} color=\"#bd2f1c\" loading={loading} />\n      :\n      <div>\n        <input id='year' type=\"number\" placeholder={'연도를 입력해주세요.'} onChange={changeYear}/>\n        <button onClick={runFetch}>찾기!</button>\n        {(typeof holidayList == 'undefined') ? (\n        <p>휴일을 찾을 수 없습니다.</p>)\n        : <ul style={{listStyle:'none'}}>\n          {holidayList.map((holiday,index) => \n            <li key={index}>\n              {holiday.dateName}({formatMoment(holiday.locdate)})\n            </li>\n          )}\n        </ul>\n        }\n      </div>\n      }\n    </>\n  );\n}\nexport default memo(GetHoliday);","import { memo, useEffect, useState } from 'react';\n\ntype time = {\n  hour: number,\n  minute: number,\n  seconds: number\n}\n\nconst NowTime = () => {\n  const [nowTime,setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds()\n    });\n  }\n\n  useEffect(() => {\n    setInterval(setTime,1000);\n  },[])\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>{nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.</p>\n      {(nowTime.hour+':'+nowTime.minute+':'+nowTime.seconds) < ('19:30:00') ?\n        <p>하지만 도연이의 퇴근 시간은 19시 30분 0초 입니다.</p>\n      : <p>도연이는 19시 30분에 퇴근했습니다.</p>\n      }\n    </div>\n  );\n}\nexport default memo(NowTime);","import { Friend } from '../../types/types';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\ninterface Props {\n  friend: Friend\n  canChange: boolean\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }:Props) => {\n\n  const changeTrue = () => {\n    setCanChange(true)\n  }\n\n  const insertFriendDatabase = async () => {\n\n    const friendInfo:Friend = {\n      name: (document.getElementById('name') as HTMLInputElement).value.toString(),\n      age: parseInt((document.getElementById('age') as HTMLInputElement).value.toString()),\n      nickname: (document.getElementById('nickname') as HTMLInputElement).value.toString()\n    }\n\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        friendInfo\n      }\n    };\n    \n    const response = await axios.put('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend',requestOption);\n    return response;\n  }\n\n  const changeFalse = async () => {\n    await insertFriendDatabase()\n    setCanChange(false)\n  }\n  \n  useEffect(() => {\n  },[]);\n\n  return (\n    <div>\n      {canChange === false ?\n      <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      :\n      <>\n        <p>이름 : </p><input type=\"text\" id='name' defaultValue={friend.name} />\n        <p>나이 : </p><input type=\"number\" id='age' />\n        <p>별명 : </p><input type=\"text\" id='nickname' defaultValue={friend.nickname} />\n        <button onClick={changeFalse}>확인!</button>\n      </>\n      }\n    </div>\n  );\n}\n\nexport default ChangeOrAddFriend;","import React,{ memo, useEffect, useState } from 'react';\n\nimport ChangeOrAddFriend from './ChangeOrAddFriend';\nimport { Friend } from '../../types/types';\n\nconst SearchFriend = () => {\n  const [friendList,setFriendList] = useState<Friend[]>([]);\n  const [canChange,setCanChange] = useState(false);\n  const [filteredFriend,setFilteredFriend] = useState<Friend>({\n      idx: 0,\n      name: '',\n      age: 0,\n      nickname: ''\n    }\n  );\n  \n  const getFriendList = async() : Promise<any> => {\n    const response = await fetch(`https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`);\n    const myFriendList = await response.json()\n    \n    setFriendList(myFriendList);\n    \n  }\n\n  const arraySearch = async () => {\n    const name = document.getElementById('name') as HTMLInputElement;\n    const filterFriend =  friendList.filter((element:Friend) => element.name === name.value);\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: '찾을 수 없습니다.'\n      });\n    }\n  }\n\n  useEffect(() => {\n    getFriendList();\n    return () => {}\n  },[canChange])\n  \n  return (\n    <>\n      <div>\n        <input type=\"text\" id='name' placeholder='이름을 입력해주세요.'/>\n        <button type=\"submit\" onClick={arraySearch}>찾기!</button>\n        {filteredFriend.idx === 0 ? <h1>이름을 입력해주세요.</h1>\n        : <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend friend={filteredFriend} canChange={canChange} setCanChange={setCanChange} />\n          </div>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default memo(SearchFriend);","import React, {useState,useEffect} from 'react';\nimport axios from 'axios';\nimport { WeatherInfo } from '../types/types';\n\nconst requestOption = (location:string) => {\n  return ({\n    headers:{\n      'Context-Type': 'application/json'\n    },\n    body: {\n      location: location\n    }\n  });\n}\n\nconst GetWeather = () => {\n  const [location,setLocation] = useState('Seoul');\n  const [weatherData, setWeatherData] = useState<WeatherInfo>();\n  const getWeatherInfo = async ():Promise<void> => {\n    try {\n      const response = await axios.post('http://localhost:5000/vaulted-bazaar-304910/us-central1/getDatas/Weather',requestOption(location));\n      setWeatherData(response.data);\n    } catch (err) {\n      setWeatherData(undefined);\n      console.log(err.status);\n    }\n  }\n\n  const changeLocation = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setLocation(e.target.value);\n  }\n\n  const clickButton = (e:React.MouseEvent<HTMLButtonElement>) => {\n    getWeatherInfo()\n  }\n\n  useEffect(() => {\n    getWeatherInfo();\n  },[])\n  \n\n  return (\n    <div>\n      <input type=\"text\" onChange={changeLocation}/>\n      <button onClick={clickButton}>찾기</button>\n      {!weatherData \n        ? <div>없는 지역입니다.</div>\n        :\n        <>\n          <p>지역 : {weatherData.country_name}</p>\n          <p>온도 : {Math.floor(weatherData.temp - 273.15)}</p>\n          <p>체감 온도 : {Math.floor(weatherData.feels_like - 273.15)}</p>\n        </>\n      }\n    </div>\n  );\n}\n\nexport default GetWeather;","import { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\n\nimport { Button } from '@material-ui/core'\nimport GetHoliday from './components/GetHoliday';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NowTime from './components/NowTime';\nimport React from 'react';\nimport SearchFriend from './components/Friends/SearchFriend';\nimport GetWeather from './components/GetWeather';\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: 'green'\n}\n\n\nfunction App() {\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <div style={{textAlign: 'center'}}>\n      <BrowserRouter>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          Open Menu\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleClose}><Link style={linkStyle} to='/nowtime'>현재시간을 확인하세요</Link></MenuItem>\n          <MenuItem onClick={handleClose}><Link style={linkStyle} to='/profile'>친구들의 정보를 확인하세요</Link></MenuItem>\n          <MenuItem onClick={handleClose}><Link style={linkStyle} to='/showholiday'>이번년도 휴일을 알아보세요</Link></MenuItem>\n          <MenuItem onClick={handleClose}><Link style={linkStyle} to='/showWeather'>현재 날씨를 보고 싶어요</Link></MenuItem>\n        </Menu>\n          <hr/>\n        <Switch>\n          {/* <Route path='/' exact={true} component={NowTime}/> */}\n          <Route path='/nowtime' exact component={NowTime}/>\n          <Route path='/profile' exact component={SearchFriend}/>\n          <Route path='/showholiday' exact component={GetHoliday} />\n          <Route path='/showWeather' exact component={GetWeather} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}