{"version":3,"sources":["components/GetHoliday.tsx","components/NowTime.tsx","components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","App.tsx","index.tsx"],"names":["formatMoment","datenumber","newDate","toString","replace","date","Date","console","log","getDay","GetHoliday","useState","loading","setLoading","year","setYear","holidayList","setHolidayList","runFetch","a","fetchHoliday","requestOption","headers","body","axios","post","response","data","item","useEffect","size","color","id","type","placeholder","onChange","e","target","value","onClick","map","holiday","index","dateName","locdate","NowTime","hour","minute","seconds","nowTime","setNowTime","setTime","getHours","getMinutes","getSeconds","setInterval","memo","ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","friendInfo","name","document","getElementById","age","parseInt","nickname","put","changeFalse","defaultValue","SearchFriend","friendList","setFriendList","idx","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","element","length","linkStyle","textDecoration","App","React","anchorEl","setAnchorEl","handleClose","Button","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","style","to","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.2c1aad7f.chunk.js","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\n\nimport { HeartSpinner } from 'react-spinners-kit';\nimport axios from 'axios';\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\nconst formatMoment = (datenumber: number): any => {\n  const weeks = ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'];\n  const datestring = datenumber.toString();\n  const newDate = datestring.replace(/([0-9]{4})([0-9]{2})([0-9]{2})/,'$1-$2-$3');\n  const date = new Date(newDate);\n  console.log()\n  return newDate + ', ' + weeks[date.getDay()];\n}\n\nconst GetHoliday = () => {\n  const [loading,setLoading] = useState(false);\n  const [year, setYear] = useState('2021');\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([]);\n\n  const runFetch = async():Promise<void> => {\n    fetchHoliday()\n  }\n\n  const fetchHoliday = async ():Promise<void> => {\n    setLoading(true);\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        year: year\n      }\n    };\n\n    const response = await axios.post('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas',requestOption);\n    const data = await response.data.holidayList.item;\n    setHolidayList(await data);\n    setLoading(false);\n  }\n\n  const changeYear = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setYear(e.target.value);\n  }\n\n  useEffect(() => {\n    fetchHoliday();\n  },[])\n\n  return (\n    <>\n      {loading ?\n      <HeartSpinner size={30} color=\"#bd2f1c\" loading={loading} />\n      :\n      <div>\n        <input id='year' type=\"number\" placeholder={'연도를 입력해주세요.'} onChange={changeYear}/>\n        <button onClick={runFetch}>찾기!</button>\n        {(typeof holidayList == 'undefined') ? (\n        <p>휴일을 찾을 수 없습니다.</p>)\n        : <ul>\n          {holidayList.map((holiday,index) => \n            <li key={index}>\n              {holiday.dateName}({formatMoment(holiday.locdate)})\n            </li>\n          )}\n        </ul>\n        }\n      </div>\n      }\n    </>\n  );\n}\nexport default GetHoliday;","import { memo, useEffect, useState } from 'react';\n\ntype time = {\n  hour: number,\n  minute: number,\n  seconds: number\n}\n\nconst NowTime = () => {\n  const [nowTime,setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds()\n    });\n  }\n\n  useEffect(() => {\n    setInterval(setTime,1000);\n  },[])\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>{nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.</p>\n      {(nowTime.hour+':'+nowTime.minute+':'+nowTime.seconds) < ('19:30:00') ?\n        <p>하지만 도연이의 퇴근 시간은 19시 30분 0초 입니다.</p>\n      : <p>도연이는 19시 30분에 퇴근했습니다.</p>\n      }\n    </div>\n  );\n}\nexport default memo(NowTime);","import { Friend } from '../../types/types';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\ninterface Props {\n  friend: Friend\n  canChange: boolean\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }:Props) => {\n\n  const changeTrue = () => {\n    setCanChange(true)\n  }\n\n  const insertFriendDatabase = async () => {\n\n    const friendInfo:Friend = {\n      name: (document.getElementById('name') as HTMLInputElement).value.toString(),\n      age: parseInt((document.getElementById('age') as HTMLInputElement).value.toString()),\n      nickname: (document.getElementById('nickname') as HTMLInputElement).value.toString()\n    }\n\n    const requestOption = {\n      headers:{\n        'Context-Type': 'application/json'\n      },\n      body: {\n        friendInfo\n      }\n    };\n    \n    const response = await axios.put('https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend',requestOption);\n    return response;\n  }\n\n  const changeFalse = async () => {\n    await insertFriendDatabase()\n    setCanChange(false)\n  }\n  \n  useEffect(() => {\n  },[]);\n\n  return (\n    <div>\n      {canChange === false ?\n      <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      :\n      <>\n        <p>이름 : </p><input type=\"text\" id='name' defaultValue={friend.name} />\n        <p>나이 : </p><input type=\"number\" id='age' />\n        <p>별명 : </p><input type=\"text\" id='nickname' defaultValue={friend.nickname} />\n        <button onClick={changeFalse}>확인!</button>\n      </>\n      }\n    </div>\n  );\n}\n\nexport default ChangeOrAddFriend;","import React,{ memo, useEffect, useState } from 'react';\n\nimport ChangeOrAddFriend from './ChangeOrAddFriend';\nimport { Friend } from '../../types/types';\n\nconst SearchFriend = () => {\n  const [friendList,setFriendList] = useState<Friend[]>([]);\n  const [canChange,setCanChange] = useState(false);\n  const [filteredFriend,setFilteredFriend] = useState<Friend>({\n      idx: 0,\n      name: '',\n      age: 0,\n      nickname: ''\n    }\n  );\n  \n  const getFriendList = async() : Promise<any> => {\n    const response = await fetch(`https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`);\n    const myFriendList = await response.json()\n    \n    setFriendList(myFriendList);\n    \n  }\n\n  const arraySearch = async () => {\n    const name = document.getElementById('name') as HTMLInputElement;\n    const filterFriend =  friendList.filter((element:Friend) => element.name === name.value);\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: '찾을 수 없습니다.'\n      });\n    }\n  }\n\n  useEffect(() => {\n    getFriendList();\n    return () => {}\n  },[canChange])\n  \n  return (\n    <>\n      <div>\n        <input type=\"text\" id='name' placeholder='이름을 입력해주세요.'/>\n        <button type=\"submit\" onClick={arraySearch}>찾기!</button>\n        {filteredFriend.idx === 0 ? <h1>이름을 입력해주세요.</h1>\n        : <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend friend={filteredFriend} canChange={canChange} setCanChange={setCanChange} />\n          </div>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default memo(SearchFriend);","import { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\n\nimport { Button } from '@material-ui/core'\nimport GetHoliday from './components/GetHoliday';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NowTime from './components/NowTime';\nimport React from 'react';\nimport SearchFriend from './components/Friends/SearchFriend';\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: 'green'\n}\n\nfunction App() {\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <BrowserRouter>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Open Menu\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}><Link style={linkStyle} to='/nowtime'>현재시간을 확인하세요</Link></MenuItem>\n        <MenuItem onClick={handleClose}><Link style={linkStyle} to='/profile'>친구들의 정보를 확인하세요</Link></MenuItem>\n        <MenuItem onClick={handleClose}><Link style={linkStyle} to='/showholiday'>이번년도 휴일을 알아보세요</Link></MenuItem>\n      </Menu>\n        <hr/>\n      <Switch>\n        {/* <Route path='/' exact={true} component={NowTime}/> */}\n        <Route path='/nowtime' exact component={NowTime}/>\n        <Route path='/profile' exact component={SearchFriend}/>\n        <Route path='/showholiday' exact component={GetHoliday} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}