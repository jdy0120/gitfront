{"version":3,"sources":["_providers/AppProviders.tsx","utils/createCtx.ts","components/Calendar/EventCRUD.tsx","components/Calendar/Calendar.tsx","components/GetHoliday.tsx","components/GetWeather.tsx","_config/jwt-config.ts","components/Login/Register.tsx","components/Login/Login.tsx","components/NowTime.tsx","components/Friends/ChangeOrAddFriend.tsx","components/Friends/SearchFriend.tsx","App.tsx","index.tsx"],"names":["ActionType","ctx","React","createContext","undefined","c","useContext","Error","Provider","createCtx","useCtx","initialState","user","setUser","dispatch","type","SetUser","payload","resetUser","ResetUser","reducer","state","action","AppProvider","props","useReducer","actions","value","children","formatMoment","datestring","newDate","replace","Date","getDay","EventCRUD","clickedEvent","clickedDate","setEventModal","CURDFlag","setCURDFlag","useState","title","setTitle","content","setContent","useAppContext","insertEvent","a","requestOption","headers","loginToken","body","division","email","date","axios","post","response","console","log","JSON","stringify","deleteEvent","idx","alert","DialogContent","style","textAlign","DialogTitle","id","DialogContentText","time","name","Button","variant","color","onClick","TextField","label","onChange","e","target","multiline","Transition","forwardRef","ref","Slide","direction","Calendar","history","events","setEvents","eventModal","setClickedEvent","setClickedDate","sortEventsToTime","b","sortEventsToDate","getEvents","data","sort","map","element","push","useEffect","plugins","dayGridPlugin","interactionPlugin","initialView","dateClick","dateStr","eventClick","def","event","_def","instance","_instance","range","start","toString","extendedProps","moment","format","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","datenumber","GetHoliday","loading","setLoading","year","setYear","holidayList","setHolidayList","runFetch","fetchHoliday","item","size","placeholder","listStyle","holiday","index","dateName","locdate","location","GetWeather","setLocation","weatherData","setWeatherData","getWeatherInfo","country_name","Math","floor","temp","feels_like","jwtObj","Title","styled","h1","getModalStyle","top","left","transform","useStyles","makeStyles","theme","createStyles","paper","alignItems","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Register","setOpenLoginModal","setName","setEmail","pw","setPw","modalStyle","classes","getRegister","preventDefault","withCredentials","parse","jwt","verify","className","onSubmit","required","Login","register","setRegister","header","getToken","NowTime","hour","minute","seconds","nowTime","setNowTime","setTime","getHours","getMinutes","getSeconds","interval","setInterval","clearInterval","memo","ChangeOrAddFriend","friend","canChange","setCanChange","insertFriendDatabase","friendInfo","document","getElementById","age","parseInt","nickname","put","changeFalse","defaultValue","SearchFriend","friendList","setFriendList","filteredFriend","setFilteredFriend","getFriendList","fetch","json","myFriendList","arraySearch","filterFriend","filter","length","Bar","linkStyle","textDecoration","App","openLoginModal","openMenu","setOpenMenu","menuClose","aria-controls","aria-haspopup","currentTarget","Modal","Menu","anchorEl","Boolean","MenuItem","to","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.4d7eb044.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\nimport { UserInfo } from \"../types/types\";\nimport { createCtx } from \"../utils/createCtx\";\n\nconst [useCtx, Provider] = createCtx<Context>();\n\ninterface Context {\n  state: State;\n  setUser: (user: UserInfo) => void;\n  resetUser: () => void;\n}\n\nexport enum ActionType {\n  SetUser = \"set-user\",\n  ResetUser = \"reset-user\",\n}\n\nexport interface State {\n  user?: UserInfo;\n}\n\nconst initialState: State = {\n  user: undefined,\n};\n\ninterface SetUserAction {\n  type: ActionType.SetUser;\n  payload: UserInfo;\n}\n\ninterface ResetUserAction {\n  type: ActionType.ResetUser;\n}\n\ntype Action = SetUserAction | ResetUserAction;\n\ninterface Props {\n  children?: React.ReactElement;\n}\n\ntype Reducer = (state: State, action: Action) => State;\n\nconst setUser = (dispatch: React.Dispatch<SetUserAction>) => (\n  user: UserInfo\n): void => {\n  dispatch({\n    type: ActionType.SetUser,\n    payload: user,\n  });\n};\n\nconst resetUser = (dispatch: React.Dispatch<ResetUserAction>) => (): void => {\n  dispatch({\n    type: ActionType.ResetUser,\n  });\n};\n\nconst reducer: Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"set-user\":\n      return { ...state, user: action.payload };\n    case \"reset-user\":\n      return { ...state, user: undefined };\n    default:\n      return state;\n  }\n};\n\nfunction AppProvider(props: Props): React.ReactElement {\n  const [state, dispatch] = useReducer<Reducer>(reducer, initialState);\n\n  const actions = {\n    setUser: setUser(dispatch),\n    resetUser: resetUser(dispatch),\n  };\n\n  return <Provider value={{ state, ...actions }}>{props.children}</Provider>;\n}\n\nexport { useCtx as useAppContext, AppProvider };\n","import React from 'react';\n\nexport function createCtx<ContextType>() {\n  const ctx = React.createContext<\n    ContextType | undefined\n  >(undefined);\n  function useCtx() {\n    const c = React.useContext(ctx);\n    if (!c)\n      throw new Error(\n        \"useCtx must be inside a Provider with a value\"\n      );\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}","import { Dispatch, SetStateAction, useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { EventInfo } from \"../../types/types\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\n// import { useCookies } from \"react-cookie\";\nimport { useAppContext } from \"../../_providers/AppProviders\";\n\ninterface Props {\n  clickedEvent: EventInfo | undefined;\n  clickedDate: string | undefined;\n  setEventModal: Dispatch<SetStateAction<boolean>>;\n  CURDFlag: boolean;\n  setCURDFlag: Dispatch<SetStateAction<boolean>>;\n}\n\nconst formatMoment = (datestring: string): any => {\n  const weeks = [\n    \"일요일\",\n    \"월요일\",\n    \"화요일\",\n    \"수요일\",\n    \"목요일\",\n    \"금요일\",\n    \"토요일\",\n  ];\n  const newDate = datestring.replace(\n    /([0-9]{4})([0-9]{2})([0-9]{2})/,\n    \"$1-$2-$3\"\n  );\n  const date = new Date(newDate);\n  return newDate + \" [\" + weeks[date.getDay()] + \"]\";\n};\n\nexport const EventCRUD = ({\n  clickedEvent,\n  clickedDate,\n  setEventModal,\n  CURDFlag,\n  setCURDFlag,\n}: Props) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  // const [cookie] = useCookies();\n\n  const {\n    state: { user },\n  } = useAppContext();\n\n  const insertEvent = async () => {\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n        loginToken: user?.loginToken,\n      },\n      body: {\n        division: \"insertEvent\",\n        title: title,\n        content: content,\n        email: user?.email,\n        date: clickedDate,\n      },\n    };\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Calendar\",\n        requestOption\n      );\n      console.log(JSON.stringify(response));\n    } catch (err) {\n      console.log(err);\n    }\n\n    setTitle('');\n    setContent('');\n    setEventModal(false);\n    CURDFlag ? setCURDFlag(false) : setCURDFlag(true);\n  };\n\n  const deleteEvent = async () => {\n    if (user?.email === clickedEvent?.email) {\n      const requestOption = {\n        headers: {\n          \"Context-Type\": \"application/json\",\n          loginToken: user?.loginToken,\n        },\n        body: {\n          division: \"deleteEvent\",\n          idx: clickedEvent?.idx,\n        },\n      };\n      try {\n        const response = await axios.post(\n          \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Calendar\",\n          requestOption\n        );\n        console.log(JSON.stringify(response));\n      } catch (err) {\n        console.log(err);\n      }\n      setEventModal(false);\n      CURDFlag ? setCURDFlag(false) : setCURDFlag(true);\n    } else {\n      setEventModal(false);\n      alert(\"남의 것을 삭제할 수 없습니다.\");\n    }\n  };\n\n  return (\n    <DialogContent style={{ textAlign: \"center\" }}>\n      {clickedEvent ? (\n        <>\n          <ScheduleIcon />\n          <DialogTitle id=\"alert-dialog-slide-description\">\n            {clickedEvent.title}\n          </DialogTitle>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent.date ? formatMoment(clickedEvent?.date) : \"null\"}\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent.time}\n          </DialogContentText>\n          <hr />\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent.content}\n          </DialogContentText>\n          <hr />\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedEvent.name}\n          </DialogContentText>\n          <hr />\n          <Button variant=\"contained\" color=\"primary\">\n            {\"수정\"}\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={deleteEvent}>\n            {\"삭제\"}\n          </Button>\n        </>\n      ) : (\n        <>\n          <DialogTitle id=\"alert-dialog-slide-description\">\n            <TextField\n              label=\"제목\"\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </DialogTitle>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {clickedDate}\n          </DialogContentText>\n          <TextField\n            multiline\n            label=\"내용\"\n            onChange={(e) => {\n              setContent(e.target.value);\n            }}\n          />\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            {user?.name}\n          </DialogContentText>\n          <Button variant=\"contained\" color=\"primary\" onClick={insertEvent}>\n            {\"저장\"}\n          </Button>\n        </>\n      )}\n    </DialogContent>\n  );\n};\n","import { EventInfo } from \"../../types/types\";\nimport FullCalendar, { EventClickArg } from \"@fullcalendar/react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { RouteComponentProps } from \"react-router\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\nimport axios from \"axios\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport moment from \"moment-timezone\";\n// import { useCookies } from \"react-cookie\";\nimport { useAppContext } from \"../../_providers/AppProviders\";\nimport { EventCRUD } from \"./EventCRUD\";\n\nconst getTime = (events:EventInfo[]|undefined): any => {\n  const today = new Date();\n\n  const leftEvents = events?.filter((el) => {\n    return el.date + ' ' + el.time >= today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2)+ '-' +('0' + today.getDate()).slice(-2) + ' ' + ('0' + today.getHours()).slice(-2) + ':' + ('0' + today.getMinutes()).slice(-2) + ':' + ('0' + today.getSeconds()).slice(-2);\n  })\n  if (!leftEvents) return undefined\n\n  const nearEventTime = {\n    year: parseInt(leftEvents[0].date.substring(0,4)),\n    month: parseInt(leftEvents[0].date.substring(5,7)),\n    day: parseInt(leftEvents[0].date.substring(8,10)),\n    hours: parseInt(leftEvents[0].time.substring(0,2)),\n    minutes: parseInt(leftEvents[0].time.substring(3,5)),\n    seconds: parseInt(leftEvents[0].time.substring(6,8)),\n  };\n  \n  const nearTime = new Date(\n    nearEventTime.year,\n    nearEventTime.month-1,\n    nearEventTime.day,\n    nearEventTime.hours,\n    nearEventTime.minutes,\n    nearEventTime.seconds,\n  );\n\n  const leftMiliseconds = nearTime.getTime()-today.getTime();\n  const Dday = leftMiliseconds/(24 * 60 * 60 * 1000);\n  if (Dday > 0) return Dday\n  return (-1)*leftMiliseconds;\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Calendar = ({ history }: RouteComponentProps) => {\n  // const [cookie] = useCookies();\n  const [events, setEvents] = useState<EventInfo[]>();\n  const [eventModal, setEventModal] = useState<boolean>(false);\n  const [clickedEvent, setClickedEvent] = useState<EventInfo | undefined>();\n  const [clickedDate, setClickedDate] = useState<string>();\n  const [CURDFlag, setCURDFlag] = useState<boolean>(false);\n  const [Dday, setDday] = useState<number|undefined>();\n\n  const {\n    state: { user },\n  } = useAppContext();\n\n  const requestOption = {\n    headers: {\n      \"Context-Type\": \"application/json\",\n      loginToken: user?.loginToken,\n    },\n    body: {\n      division: \"getEvents\",\n    },\n  };\n\n  const sortEventsToTime = (a:EventInfo,b:EventInfo) => {\n      if (a.time > b.time) {\n        return 1;\n      }\n      if (a.time < b.time) {\n        return -1;\n      }\n      // a must be equal to b\n      return 0;\n  }\n\n  const sortEventsToDate = (a:EventInfo,b:EventInfo) => {\n    if (a.date > b.date) {\n      return 1;\n    }\n    if (a.date < b.date) {\n      return -1;\n    }\n    // a must be equal to b\n    return 0;\n}\n\n\n  const getEvents = async () => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Calendar\",\n        requestOption\n      );\n      setEvents(\n        response.data.sort(sortEventsToDate).sort(sortEventsToTime).map((element: any) => {\n          return {\n            ...element,\n          };\n        })\n      );\n      console.log(events);\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Access Denied\":\n          alert(\"접근이 제한되었습니다.\");\n          history.push(\"/gitfront\");\n          break;\n        case \"Not valid Token\":\n          alert(\"올바른 토큰이 아닙니다.\");\n          history.push(\"/gitfront\");\n          break;\n        default:\n          alert(response.data);\n          break;\n      }\n    }\n  };\n\n  const showEventDetail = (element: EventClickArg) => {\n    setEventModal(true);\n    const def = element.event._def;\n    const instance = element.event._instance;\n    setClickedDate(element.event._instance?.range.start.toString());\n    setClickedEvent({\n      idx: def.extendedProps.idx,\n      name: def.extendedProps.name,\n      color: def.extendedProps.color,\n      title: def.title,\n      content: def.extendedProps.content,\n      email: def.extendedProps.email,\n      date: moment(instance?.range.start).format(\"YYYY-MM-DD\"),\n      time: def.extendedProps.time,\n    });\n  };\n\n  const insertEventForm = (element: DateClickArg) => {\n    setClickedEvent(undefined);\n    setClickedDate(element.dateStr);\n    setEventModal(true);\n  };\n\n  const closeEventDetail = () => {\n    setEventModal(false);\n  };\n\n  // const getDday = () => {\n  //   console.log(getTime(events))\n  //   // console.log(Dday);\n  //   if (!Dday) return 0;\n  //   if (Dday > 0) return 'Dday ' + Math.floor(Dday).toString()\n  //   return Math.floor(Dday/3600000).toString() + '시' + Math.floor(Dday/60000).toString() + '분' + Math.floor(Dday/1000).toString() + '초'\n  // }\n\n  useEffect(() => {\n    getEvents();\n    // const setDday = setInterval(getDday, 1000);\n    // return () => clearInterval(setDday);\n  }, [CURDFlag]);\n\n  return (\n    <>\n      {/* {Dday !== undefined ?\n      <p>{'가장빠른 일정 D-day : '}{getDday()}</p>\n      :\n      <p>{'남은 일정이 없습니다.'}</p>\n      } */}\n      \n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        dateClick={insertEventForm}\n        events={events}\n        eventClick={showEventDetail}\n      />\n      <Dialog\n        open={eventModal}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={closeEventDetail}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <EventCRUD\n          clickedEvent={clickedEvent}\n          clickedDate={clickedDate}\n          setEventModal={setEventModal}\n          CURDFlag={CURDFlag}\n          setCURDFlag={setCURDFlag}\n        />\n      </Dialog>\n    </>\n  );\n};\n\nexport default Calendar;\n","import React, { useEffect, useState } from \"react\";\n\nimport { HeartSpinner } from \"react-spinners-kit\";\nimport axios from \"axios\";\n\ninterface HolidayList {\n  dateKind: string;\n  dateName: string;\n  isHoliday: string;\n  locdate: number;\n  seq: number;\n}\n\nconst formatMoment = (datenumber: number): any => {\n  const weeks = [\n    \"일요일\",\n    \"월요일\",\n    \"화요일\",\n    \"수요일\",\n    \"목요일\",\n    \"금요일\",\n    \"토요일\",\n  ];\n  const datestring = datenumber.toString();\n  const newDate = datestring.replace(\n    /([0-9]{4})([0-9]{2})([0-9]{2})/,\n    \"$1-$2-$3\"\n  );\n  const date = new Date(newDate);\n  console.log();\n  return newDate + \", \" + weeks[date.getDay()];\n};\nconst GetHoliday = () => {\n  const [loading, setLoading] = useState(false);\n  const [year, setYear] = useState(\"2021\");\n  const [holidayList, setHolidayList] = useState<HolidayList[]>([]);\n\n  const runFetch = async (): Promise<void> => {\n    fetchHoliday();\n  };\n\n  const fetchHoliday = async (): Promise<void> => {\n    setLoading(true);\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n      },\n      body: {\n        year: year,\n      },\n    };\n\n    const response = await axios.post(\n      \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas\",\n      requestOption\n    );\n    const data = await response.data.holidayList.item;\n    setHolidayList(await data);\n    setLoading(false);\n  };\n\n  const changeYear = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setYear(e.target.value);\n  };\n\n  useEffect(() => {\n    fetchHoliday();\n    return () => {\n    };\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <HeartSpinner size={30} color=\"#bd2f1c\" loading={loading} />\n      ) : (\n        <div>\n          <input\n            id=\"year\"\n            type=\"number\"\n            placeholder={\"연도를 입력해주세요.\"}\n            onChange={changeYear}\n          />\n          <button onClick={runFetch}>찾기!</button>\n          {typeof holidayList == \"undefined\" ? (\n            <p>휴일을 찾을 수 없습니다.</p>\n          ) : (\n            <ul style={{ listStyle: \"none\" }}>\n              {holidayList.map((holiday, index) => (\n                <li key={index}>\n                  {holiday.dateName}({formatMoment(holiday.locdate)})\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\nexport default GetHoliday;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { WeatherInfo } from \"../types/types\";\n\nconst requestOption = (location: string) => {\n  return {\n    headers: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      location: location,\n    },\n  };\n};\n\nconst GetWeather = () => {\n  const [location, setLocation] = useState(\"Seoul\");\n  const [weatherData, setWeatherData] = useState<WeatherInfo>();\n  const getWeatherInfo = async (): Promise<void> => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Weather\",\n        requestOption(location)\n      );\n      setWeatherData(response.data);\n    } catch (err) {\n      setWeatherData(undefined);\n      const response = err.response;\n      switch (response.data) {\n        case \"Not exist area\":\n          alert(\"존재하지 않는 지역입니다.\");\n          break;\n        case \"Request path contains unescaped characters\":\n          alert(\"영어로 적어주세요.\");\n          break;\n        default:\n          alert(response.data);\n          break;\n      }\n    }\n  };\n\n  const changeLocation = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setLocation(e.target.value);\n  };\n\n  const clickButton = (e: React.MouseEvent<HTMLButtonElement>) => {\n    getWeatherInfo();\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n\n  return (\n    <div>\n      <input type=\"text\" onChange={changeLocation} />\n      <button onClick={clickButton}>찾기</button>\n      {!weatherData ? (\n        <div>없는 지역입니다.</div>\n      ) : (\n        <>\n          <p>지역 : {weatherData.country_name}</p>\n          <p>온도 : {Math.floor(weatherData.temp - 273.15)}</p>\n          <p>체감 온도 : {Math.floor(weatherData.feels_like - 273.15)}</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GetWeather;\n","export const jwtObj = {\n  secret: 'mango',\n}","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\n// import { useCookies } from \"react-cookie\";\nimport jwt from \"jsonwebtoken\";\nimport { jwtObj } from \"../../_config/jwt-config\";\nimport { useAppContext } from \"../../_providers/AppProviders\";\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\ninterface Props {\n  setOpenLoginModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst Register = ({ setOpenLoginModal }: Props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  // const [cookie, setCookie] = useCookies();\n  const [modalStyle] = useState(getModalStyle);\n  const classes = useStyles();\n\n  const { setUser } = useAppContext();\n\n  const requestOption = {\n    headers: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      name: name,\n      email: email,\n      pw: pw,\n    },\n  };\n  const getRegister = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/register\",\n        requestOption\n      );\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/login\",\n        requestOption,\n        { withCredentials: true }\n      );\n      setOpenLoginModal(false);\n      setUser({\n        loginToken: response.data.loginToken,\n        ...JSON.parse(\n          JSON.stringify(jwt.verify(response.data.loginToken, jwtObj.secret))\n        ),\n      });\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Duplicated email\":\n          alert(\"중복된 이메일 입니다.\");\n          break;\n        default:\n          alert(response.data);\n          break;\n      }\n    }\n  };\n\n  return (\n    <div style={modalStyle} className={classes.paper}>\n      <Title>{\"회원가입\"}</Title>\n      <form action=\"/\" onSubmit={getRegister}>\n        name :{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"이름\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setName(e.target.value);\n          }}\n          required\n        />\n        <br />\n        email :{\" \"}\n        <input\n          type=\"email\"\n          placeholder=\"이메일\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setEmail(e.target.value);\n          }}\n          required\n        />\n        <br />\n        password :{\" \"}\n        <input\n          type=\"text\"\n          placeholder=\"비밀번호\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setPw(e.target.value);\n          }}\n          required\n        />\n        <br />\n        <button type=\"submit\">회원가입</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Register from \"./Register\";\nimport { useAppContext } from \"../../_providers/AppProviders\";\nimport { jwtObj } from \"../../_config/jwt-config\";\nimport jwt from \"jsonwebtoken\";\n// import { useCookies } from \"react-cookie\";\ninterface Props {\n  setOpenLoginModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\nconst Login = ({ setOpenLoginModal }: Props) => {\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [modalStyle] = useState(getModalStyle);\n  const [register, setRegister] = useState(false);\n  // const [cookie, setCookie] = useCookies();\n  const {\n    setUser,\n  } = useAppContext();\n\n  const classes = useStyles();\n\n  const requestOption = {\n    header: {\n      \"Context-Type\": \"application/json\",\n    },\n    body: {\n      email: email,\n      pw: pw,\n    },\n  };\n\n  const getToken = async () => {\n    try {\n      const response = await axios.post(\n        \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/authFunction/auth/login\",\n        requestOption,\n        { withCredentials: true }\n      );\n      setOpenLoginModal(false);\n      setUser({\n        loginToken: response.data.loginToken,\n        ...JSON.parse(\n          JSON.stringify(jwt.verify(response.data.loginToken, jwtObj.secret))\n        ),\n      });\n      console.log(\"logged in\");\n    } catch (err) {\n      const response = err.response;\n      switch (response.data) {\n        case \"Not valid email\": {\n          alert(\"존재하지 않는 이메일 입니다.\");\n          break;\n        }\n        case \"Not valid password\":\n          alert(\"비밀번호가 틀렸습니다.\");\n          break;\n        default:\n          alert(response);\n          break;\n      }\n    }\n  };\n\n  return (\n    <>\n      {register ? (\n        <Register setOpenLoginModal={setOpenLoginModal} />\n      ) : (\n        <div style={modalStyle} className={classes.paper}>\n          email :{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"이메일\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <br />\n          password :{\" \"}\n          <input\n            type=\"password\"\n            placeholder=\"패스워드\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setPw(e.target.value);\n            }}\n          />\n          <br />\n          <button onClick={getToken}>로그인</button>\n          <button\n            onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n              setRegister(true);\n            }}\n          >\n            회원가입\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import { memo, useEffect, useState } from \"react\";\n\ntype time = {\n  hour: number;\n  minute: number;\n  seconds: number;\n};\n\nconst NowTime = () => {\n  const [nowTime, setNowTime] = useState<time>({\n    hour: 0,\n    minute: 0,\n    seconds: 0,\n  });\n\n  const setTime = () => {\n    const date = new Date();\n    setNowTime({\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      seconds: date.getSeconds(),\n    });\n  };\n  \n\n  useEffect(() => {\n    const interval = setInterval(setTime, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <p>현재 시간은</p>\n      <p>\n        {nowTime.hour}시 {nowTime.minute}분 {nowTime.seconds}초 입니다.\n      </p>\n      {nowTime.hour + \":\" + nowTime.minute + \":\" + nowTime.seconds <\n      \"19:30:00\" ? (\n        <p>하지만 도연이의 퇴근 시간은 19시 30분 0초 입니다.</p>\n      ) : (\n        <p>도연이는 19시 30분에 퇴근했습니다.</p>\n      )}\n    </div>\n  );\n};\nexport default memo(NowTime);\n","import { Friend } from \"../../types/types\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\ninterface Props {\n  friend: Friend;\n  canChange: boolean;\n  setCanChange: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ChangeOrAddFriend = ({ friend, canChange, setCanChange }: Props) => {\n  const changeTrue = () => {\n    setCanChange(true);\n  };\n\n  const insertFriendDatabase = async () => {\n    const friendInfo: Friend = {\n      name: (document.getElementById(\n        \"name\"\n      ) as HTMLInputElement).value.toString(),\n      age: parseInt(\n        (document.getElementById(\"age\") as HTMLInputElement).value.toString()\n      ),\n      nickname: (document.getElementById(\n        \"nickname\"\n      ) as HTMLInputElement).value.toString(),\n    };\n\n    const requestOption = {\n      headers: {\n        \"Context-Type\": \"application/json\",\n      },\n      body: {\n        friendInfo,\n      },\n    };\n\n    const response = await axios.put(\n      \"https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/insertFriend\",\n      requestOption\n    );\n    return response;\n  };\n\n  const changeFalse = async () => {\n    await insertFriendDatabase();\n    setCanChange(false);\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      {canChange === false ? (\n        <button onClick={changeTrue}>별명을 바꾸거나 추가하고 싶어요.</button>\n      ) : (\n        <>\n          <p>이름 : </p>\n          <input type=\"text\" id=\"name\" defaultValue={friend.name} />\n          <p>나이 : </p>\n          <input type=\"number\" id=\"age\" />\n          <p>별명 : </p>\n          <input type=\"text\" id=\"nickname\" defaultValue={friend.nickname} />\n          <button onClick={changeFalse}>확인!</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChangeOrAddFriend;\n","import React, { memo, useEffect, useState } from \"react\";\n\nimport ChangeOrAddFriend from \"./ChangeOrAddFriend\";\nimport { Friend } from \"../../types/types\";\n\nconst SearchFriend = () => {\n  const [friendList, setFriendList] = useState<Friend[]>([]);\n  const [canChange, setCanChange] = useState(false);\n  const [filteredFriend, setFilteredFriend] = useState<Friend>({\n    idx: 0,\n    name: \"\",\n    age: 0,\n    nickname: \"\",\n  });\n\n  const getFriendList = async (): Promise<any> => {\n    const response = await fetch(\n      `https://us-central1-vaulted-bazaar-304910.cloudfunctions.net/getDatas/Friends`\n    );\n    const myFriendList = await response.json();\n\n    setFriendList(myFriendList);\n  };\n\n  const arraySearch = async () => {\n    const name = document.getElementById(\"name\") as HTMLInputElement;\n    const filterFriend = friendList.filter(\n      (element: Friend) => element.name === name.value\n    );\n    if (filterFriend.length !== 0) {\n      setFilteredFriend(filterFriend[0]);\n    } else {\n      setFilteredFriend({\n        idx: -1,\n        name: name.value,\n        age: -1,\n        nickname: \"찾을 수 없습니다.\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    getFriendList();\n    return () => {};\n  }, [canChange]);\n\n  return (\n    <>\n      <div>\n        <input type=\"text\" id=\"name\" placeholder=\"이름을 입력해주세요.\" />\n        <button type=\"submit\" onClick={arraySearch}>\n          찾기!\n        </button>\n        {filteredFriend.idx === 0 ? (\n          <h1>이름을 입력해주세요.</h1>\n        ) : (\n          <div>\n            <p>이름 : {filteredFriend.name}</p>\n            <p>나이 : {filteredFriend.age}</p>\n            <p>별명 : {filteredFriend.nickname}</p>\n            <ChangeOrAddFriend\n              friend={filteredFriend}\n              canChange={canChange}\n              setCanChange={setCanChange}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(SearchFriend);\n","import { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport { Button, Modal } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Calendar from \"./components/Calendar/Calendar\";\nimport GetHoliday from \"./components/GetHoliday\";\nimport GetWeather from \"./components/GetWeather\";\nimport Login from \"./components/Login/Login\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NowTime from \"./components/NowTime\";\nimport SearchFriend from \"./components/Friends/SearchFriend\";\n// import { useCookies } from \"react-cookie\";\nimport { useAppContext } from \"./_providers/AppProviders\";\n// import jwt from \"jsonwebtoken\";\n// import { jwtObj } from \"./_config/jwt-config\";\n\n/**\n * material ui의 modal을 사용할 경우 ref오류가 생기는데 Bar를 생성해주면 해결\n * 참조 : https://www.morolog.dev/entry/React-Material-UI%EC%97%90%EC%84%9C-Modal-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-Failed-prop-type-Warning-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0\n */\nconst Bar = React.forwardRef((props: any, ref: any) => (\n  <span {...props} ref={ref}>\n    {props.children}\n  </span>\n));\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"green\",\n};\n\nfunction App() {\n  // const [cookie, setCookie, removeCookie] = useCookies();\n  const [openLoginModal, setOpenLoginModal] = useState(false);\n  const [openMenu, setOpenMenu] = useState<null | HTMLElement>(null);\n\n  const {\n    state: { user },\n    resetUser,\n  } = useAppContext();\n\n  const loginOpen = () => {\n    setOpenLoginModal(true);\n  };\n\n  const loginClose = () => {\n    setOpenLoginModal(false);\n  };\n\n  const logout = () => {\n    // removeCookie(\"name\", { path: \"/\" });\n    // removeCookie(\"loginToken\", { path: \"/\" });\n    resetUser();\n  };\n\n  const menuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setOpenMenu(event.currentTarget);\n  };\n\n  const menuClose = () => {\n    setOpenMenu(null);\n  };\n  useEffect(() => {}, [openLoginModal]);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {!user ? (\n        <Button variant=\"contained\" color=\"primary\" onClick={loginOpen}>\n          {\"로그인\"}\n        </Button>\n      ) : (\n        <>\n          <p>{user.name}{'님 환영합니다.'}</p>\n          <Button onClick={logout} variant=\"contained\" style={{ backgroundColor: user.color}}>\n            {\"로그아웃\"}\n          </Button>\n        </>\n      )}\n      <BrowserRouter>\n        <Button\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={menuOpen}\n        >\n          {'Open Menu'}\n        </Button>\n        <Modal\n          open={openLoginModal}\n          onClose={loginClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <Bar>\n            <Login setOpenLoginModal={setOpenLoginModal} />\n          </Bar>\n        </Modal>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={openMenu}\n          keepMounted\n          open={Boolean(openMenu)}\n          onClose={menuClose}\n        >\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/gitfront/nowtime\">\n              {\"현재시간을 확인하세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/gitfront/profile\">\n              {\"친구들의 정보를 확인하세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/gitfront/showholiday\">\n              {\"이번년도 휴일을 알아보세요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/gitfront/showWeather\">\n              {\"현재 날씨를 보고 싶어요\"}\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={menuClose}>\n            <Link style={linkStyle} to=\"/gitfront/calendar\">\n              {\"캘린더\"}\n            </Link>\n          </MenuItem>\n        </Menu>\n        <hr />\n        <Switch>\n          <Route path=\"/gitfront/nowtime\" exact component={NowTime} />\n          <Route path=\"/gitfront/profile\" exact component={SearchFriend} />\n          <Route path=\"/gitfront/showholiday\" exact component={GetHoliday} />\n          <Route path=\"/gitfront/showWeather\" exact component={GetWeather} />\n          <Route path=\"/gitfront/calendar\" exact component={Calendar} />\n          <Route path=\"/gitfront/login\" exact component={Login} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import { CookiesProvider } from \"react-cookie\";\nimport { AppProvider } from \"./_providers/AppProviders\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}